shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 160 resolved as shift.
shift/reduce conflict in state 161 resolved as shift.
shift/reduce conflict in state 165 resolved as shift.
shift/reduce conflict in state 168 resolved as shift.
shift/reduce conflict in state 173 resolved as shift.
shift/reduce conflict in state 216 resolved as shift.
shift/reduce conflict in state 226 resolved as shift.
shift/reduce conflict in state 229 resolved as shift.
shift/reduce conflict in state 232 resolved as shift.
shift/reduce conflict in state 253 resolved as shift.
shift/reduce conflict in state 256 resolved as shift.
shift/reduce conflict in state 256 resolved as shift.
shift/reduce conflict in state 263 resolved as shift.
shift/reduce conflict in state 285 resolved as shift.
shift/reduce conflict in state 290 resolved as shift.


Unused terminals:


Grammar

Rule 1     module_list -> module_list module_def
Rule 2     module_list -> module_def
Rule 3     module_def -> module_ident DEFINITIONS tag_default GETS BEGIN module_body END
Rule 4     tag_default -> EXPLICIT TAGS
Rule 5     tag_default -> IMPLICIT TAGS
Rule 6     tag_default -> AUTOMATIC TAGS
Rule 7     tag_default -> <empty>
Rule 8     module_ident -> type_ref assigned_ident
Rule 9     assigned_ident -> oid_val
Rule 10    assigned_ident -> <empty>
Rule 11    module_body -> exports imports assign_list
Rule 12    module_body -> <empty>
Rule 13    exports -> EXPORTS syms_exported SEMICOLON
Rule 14    exports -> <empty>
Rule 15    syms_exported -> exp_sym_list
Rule 16    syms_exported -> <empty>
Rule 17    exp_sym_list -> symbol
Rule 18    exp_sym_list -> exp_sym_list COMMA symbol
Rule 19    imports -> IMPORTS syms_imported SEMICOLON
Rule 20    imports -> <empty>
Rule 21    syms_imported -> <empty>
Rule 22    syms_imported -> syms_from_module_list
Rule 23    syms_from_module_list -> syms_from_module_list syms_from_module
Rule 24    syms_from_module_list -> syms_from_module
Rule 25    syms_from_module -> symbol_list FROM module_ident
Rule 26    symbol_list -> symbol_list COMMA symbol
Rule 27    symbol_list -> symbol
Rule 28    symbol -> type_ref
Rule 29    symbol -> identifier
Rule 30    assign_list -> assign_list assign
Rule 31    assign_list -> assign SEMICOLON
Rule 32    assign_list -> assign
Rule 33    assign -> type_assign
Rule 34    assign -> value_assign
Rule 35    assign -> pyquote
Rule 36    pyquote -> PYQUOTE
Rule 37    type_assign -> type_ref GETS type
Rule 38    type -> builtin_type
Rule 39    type -> defined_type
Rule 40    type -> sub_type
Rule 41    ext_type_ref -> type_ref DOT type_ref
Rule 42    defined_type -> ext_type_ref
Rule 43    defined_type -> type_ref
Rule 44    builtin_type -> boolean_type
Rule 45    builtin_type -> integer_type
Rule 46    builtin_type -> bitstring_type
Rule 47    builtin_type -> null_type
Rule 48    builtin_type -> sequence_type
Rule 49    builtin_type -> sequenceof_type
Rule 50    builtin_type -> set_type
Rule 51    builtin_type -> setof_type
Rule 52    builtin_type -> choice_type
Rule 53    builtin_type -> selection_type
Rule 54    builtin_type -> tagged_type
Rule 55    builtin_type -> any_type
Rule 56    builtin_type -> oid_type
Rule 57    builtin_type -> enum_type
Rule 58    builtin_type -> real_type
Rule 59    builtin_type -> char_str_type
Rule 60    builtin_type -> useful_type
Rule 61    builtin_type -> OCTET STRING
Rule 62    named_type -> identifier type
Rule 63    named_type -> type
Rule 64    boolean_type -> BOOLEAN
Rule 65    integer_type -> INTEGER
Rule 66    integer_type -> INTEGER LBRACE named_number_list RBRACE
Rule 67    named_number_list -> named_number_list COMMA named_number
Rule 68    named_number_list -> named_number
Rule 69    named_number -> identifier LPAREN signed_number RPAREN
Rule 70    named_number -> identifier LPAREN defined_value RPAREN
Rule 71    signed_number -> NUMBER
Rule 72    signed_number -> MINUS NUMBER
Rule 73    enum_type -> ENUMERATED LBRACE named_number_list RBRACE
Rule 74    enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
Rule 75    real_type -> REAL
Rule 76    bitstring_type -> BIT STRING
Rule 77    bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE
Rule 78    named_bit_list -> named_number_list
Rule 79    null_type -> NULL
Rule 80    sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE
Rule 81    sequence_type -> SEQUENCE LBRACE RBRACE
Rule 82    extension_and_exception -> ELLIPSIS
Rule 83    optional_extension_marker -> COMMA ELLIPSIS
Rule 84    optional_extension_marker -> <empty>
Rule 85    component_type_lists -> element_type_list
Rule 86    component_type_lists -> element_type_list COMMA extension_and_exception extension_additions optional_extension_marker
Rule 87    component_type_lists -> extension_and_exception extension_additions optional_extension_marker
Rule 88    extension_additions -> extension_addition_list
Rule 89    extension_additions -> <empty>
Rule 90    extension_addition_list -> COMMA extension_addition
Rule 91    extension_addition_list -> extension_addition_list COMMA extension_addition
Rule 92    extension_addition -> element_type
Rule 93    element_type_list -> element_type
Rule 94    element_type_list -> element_type_list COMMA element_type
Rule 95    element_type -> named_type
Rule 96    element_type -> named_type OPTIONAL
Rule 97    element_type -> named_type DEFAULT named_value
Rule 98    sequenceof_type -> SEQUENCE OF type
Rule 99    set_type -> SET LBRACE element_type_list RBRACE
Rule 100   setof_type -> SET OF type
Rule 101   choice_type -> CHOICE LBRACE alternative_type_lists RBRACE
Rule 102   alternative_type_lists -> alternative_type_list
Rule 103   alternative_type_lists -> alternative_type_list COMMA extension_and_exception extension_addition_alternatives optional_extension_marker
Rule 104   extension_addition_alternatives -> extension_addition_alternatives_list
Rule 105   extension_addition_alternatives -> <empty>
Rule 106   extension_addition_alternatives_list -> COMMA extension_addition_alternative
Rule 107   extension_addition_alternatives_list -> extension_addition_alternatives_list COMMA extension_addition_alternative
Rule 108   extension_addition_alternative -> named_type
Rule 109   alternative_type_list -> named_type
Rule 110   alternative_type_list -> alternative_type_list COMMA named_type
Rule 111   selection_type -> identifier LT type
Rule 112   tagged_type -> tag type
Rule 113   tagged_type -> tag IMPLICIT type
Rule 114   tagged_type -> tag EXPLICIT type
Rule 115   tag -> LBRACK class class_number RBRACK
Rule 116   class_number -> number
Rule 117   class_number -> defined_value
Rule 118   class -> UNIVERSAL
Rule 119   class -> APPLICATION
Rule 120   class -> PRIVATE
Rule 121   class -> <empty>
Rule 122   any_type -> ANY
Rule 123   any_type -> ANY DEFINED BY identifier
Rule 124   oid_type -> OBJECT_IDENTIFIER
Rule 125   useful_type -> GENERALIZEDTIME
Rule 126   useful_type -> UTCTIME
Rule 127   useful_type -> OBJECTDESCRIPTOR
Rule 128   useful_type -> EXTERNAL
Rule 129   char_str_type -> STRING_T
Rule 130   sub_type -> type subtype_spec
Rule 131   sub_type -> SET size_constraint OF type
Rule 132   sub_type -> SEQUENCE size_constraint OF type
Rule 133   sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type
Rule 134   subtype_spec -> LPAREN subtype_val_set_list RPAREN
Rule 135   subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN
Rule 136   subtype_val_set_list -> subtype_val_set
Rule 137   subtype_val_set_list -> subtype_val_set_list BAR subtype_val_set
Rule 138   subtype_val_set -> single_value
Rule 139   subtype_val_set -> contained_subtype
Rule 140   subtype_val_set -> value_range
Rule 141   subtype_val_set -> permitted_alphabet
Rule 142   subtype_val_set -> size_constraint
Rule 143   subtype_val_set -> inner_type_constraints
Rule 144   single_value -> value
Rule 145   contained_subtype -> INCLUDES type
Rule 146   value_range -> lower_end_point RANGE upper_end_point
Rule 147   lower_end_point -> lower_end_value
Rule 148   lower_end_point -> lower_end_value LT
Rule 149   upper_end_point -> upper_end_value
Rule 150   upper_end_point -> LT upper_end_value
Rule 151   lower_end_value -> value
Rule 152   lower_end_value -> MIN
Rule 153   upper_end_value -> value
Rule 154   upper_end_value -> MAX
Rule 155   size_constraint -> SIZE subtype_spec
Rule 156   permitted_alphabet -> FROM subtype_spec
Rule 157   inner_type_constraints -> WITH COMPONENT single_type_constraint
Rule 158   inner_type_constraints -> WITH COMPONENTS multiple_type_constraints
Rule 159   single_type_constraint -> subtype_spec
Rule 160   multiple_type_constraints -> full_specification
Rule 161   multiple_type_constraints -> partial_specification
Rule 162   full_specification -> LBRACE type_constraints RBRACE
Rule 163   partial_specification -> LBRACE ELLIPSIS COMMA type_constraints RBRACE
Rule 164   type_constraints -> named_constraint
Rule 165   type_constraints -> type_constraints COMMA named_constraint
Rule 166   named_constraint -> identifier constraint
Rule 167   named_constraint -> constraint
Rule 168   constraint -> value_constraint presence_constraint
Rule 169   value_constraint -> subtype_spec
Rule 170   value_constraint -> <empty>
Rule 171   presence_constraint -> PRESENT
Rule 172   presence_constraint -> ABSENT
Rule 173   presence_constraint -> OPTIONAL
Rule 174   presence_constraint -> <empty>
Rule 175   value_assign -> identifier type GETS value
Rule 176   value -> builtin_value
Rule 177   value -> defined_value
Rule 178   defined_value -> ext_val_ref
Rule 179   defined_value -> identifier
Rule 180   ext_val_ref -> type_ref DOT identifier
Rule 181   builtin_value -> boolean_val
Rule 182   builtin_value -> null_val
Rule 183   builtin_value -> special_real_val
Rule 184   builtin_value -> signed_number
Rule 185   builtin_value -> hex_string
Rule 186   builtin_value -> binary_string
Rule 187   builtin_value -> char_string
Rule 188   boolean_val -> TRUE
Rule 189   boolean_val -> FALSE
Rule 190   special_real_val -> PLUS_INFINITY
Rule 191   special_real_val -> MINUS_INFINITY
Rule 192   null_val -> NULL
Rule 193   named_value -> value
Rule 194   named_value -> identifier value
Rule 195   oid_val -> LBRACE oid_comp_list RBRACE
Rule 196   oid_comp_list -> oid_comp_list oid_component
Rule 197   oid_comp_list -> oid_component
Rule 198   oid_component -> number_form
Rule 199   oid_component -> name_form
Rule 200   oid_component -> name_and_number_form
Rule 201   number_form -> NUMBER
Rule 202   name_form -> type_ref
Rule 203   name_and_number_form -> identifier LPAREN number_form RPAREN
Rule 204   name_and_number_form -> type_ref LPAREN number_form RPAREN
Rule 205   name_and_number_form -> identifier LPAREN defined_value RPAREN
Rule 206   identifier -> LCASE_IDENT
Rule 207   binary_string -> BSTRING
Rule 208   hex_string -> HSTRING
Rule 209   char_string -> QSTRING
Rule 210   number -> NUMBER
Rule 211   type_ref -> UCASE_IDENT

Terminals, with rules where they appear

ABSENT               : 172
ANY                  : 122 123
APPLICATION          : 119
AUTOMATIC            : 6
BAR                  : 137
BEGIN                : 3
BIT                  : 76 77
BOOLEAN              : 64
BSTRING              : 207
BY                   : 123
CHOICE               : 101
COMMA                : 18 26 67 74 83 86 90 91 94 103 106 107 110 135 163 165
COMPONENT            : 157
COMPONENTS           : 158
DEFAULT              : 97
DEFINED              : 123
DEFINITIONS          : 3
DOT                  : 41 180
ELLIPSIS             : 74 82 83 135 163
END                  : 3
ENUMERATED           : 73 74
EXPLICIT             : 4 114
EXPORTS              : 13
EXTERNAL             : 128
FALSE                : 189
FROM                 : 25 156
GENERALIZEDTIME      : 125
GETS                 : 3 37 175
HSTRING              : 208
IMPLICIT             : 5 113
IMPORTS              : 19
INCLUDES             : 145
INTEGER              : 65 66
LBRACE               : 66 73 74 77 80 81 99 101 162 163 195
LBRACK               : 115
LCASE_IDENT          : 206
LPAREN               : 69 70 133 134 135 203 204 205
LT                   : 111 148 150
MAX                  : 154
MIN                  : 152
MINUS                : 72
MINUS_INFINITY       : 191
NULL                 : 79 192
NUMBER               : 71 72 201 210
OBJECTDESCRIPTOR     : 127
OBJECT_IDENTIFIER    : 124
OCTET                : 61
OF                   : 98 100 131 132 133
OPTIONAL             : 96 173
PLUS_INFINITY        : 190
PRESENT              : 171
PRIVATE              : 120
PYQUOTE              : 36
QSTRING              : 209
RANGE                : 146
RBRACE               : 66 73 74 77 80 81 99 101 162 163 195
RBRACK               : 115
REAL                 : 75
RPAREN               : 69 70 133 134 135 203 204 205
SEMICOLON            : 13 19 31
SEQUENCE             : 80 81 98 132 133
SET                  : 99 100 131
SIZE                 : 155
STRING               : 61 76 77
STRING_T             : 129
TAGS                 : 4 5 6
TRUE                 : 188
UCASE_IDENT          : 211
UNIVERSAL            : 118
UTCTIME              : 126
WITH                 : 157 158
error                : 

Nonterminals, with rules where they appear

alternative_type_list : 102 103 110
alternative_type_lists : 101
any_type             : 55
assign               : 30 31 32
assign_list          : 11 30
assigned_ident       : 8
binary_string        : 186
bitstring_type       : 46
boolean_type         : 44
boolean_val          : 181
builtin_type         : 38
builtin_value        : 176
char_str_type        : 59
char_string          : 187
choice_type          : 52
class                : 115
class_number         : 115
component_type_lists : 80
constraint           : 166 167
contained_subtype    : 139
defined_type         : 39
defined_value        : 70 117 177 205
element_type         : 92 93 94
element_type_list    : 85 86 94 99
enum_type            : 57
exp_sym_list         : 15 18
exports              : 11
ext_type_ref         : 42
ext_val_ref          : 178
extension_addition   : 90 91
extension_addition_alternative : 106 107
extension_addition_alternatives : 103
extension_addition_alternatives_list : 104 107
extension_addition_list : 88 91
extension_additions  : 86 87
extension_and_exception : 86 87 103
full_specification   : 160
hex_string           : 185
identifier           : 29 62 69 70 111 123 166 175 179 180 194 203 205
imports              : 11
inner_type_constraints : 143
integer_type         : 45
lower_end_point      : 146
lower_end_value      : 147 148
module_body          : 3
module_def           : 1 2
module_ident         : 3 25
module_list          : 1 0
multiple_type_constraints : 158
name_and_number_form : 200
name_form            : 199
named_bit_list       : 77
named_constraint     : 164 165
named_number         : 67 68
named_number_list    : 66 67 73 74 78
named_type           : 95 96 97 108 109 110
named_value          : 97
null_type            : 47
null_val             : 182
number               : 116
number_form          : 198 203 204
oid_comp_list        : 195 196
oid_component        : 196 197
oid_type             : 56
oid_val              : 9
optional_extension_marker : 86 87 103
partial_specification : 161
permitted_alphabet   : 141
presence_constraint  : 168
pyquote              : 35
real_type            : 58
selection_type       : 53
sequence_type        : 48
sequenceof_type      : 49
set_type             : 50
setof_type           : 51
signed_number        : 69 184
single_type_constraint : 157
single_value         : 138
size_constraint      : 131 132 133 142
special_real_val     : 183
sub_type             : 40
subtype_spec         : 130 155 156 159 169
subtype_val_set      : 136 137
subtype_val_set_list : 134 135 137
symbol               : 17 18 26 27
symbol_list          : 25 26
syms_exported        : 13
syms_from_module     : 23 24
syms_from_module_list : 22 23
syms_imported        : 19
tag                  : 112 113 114
tag_default          : 3
tagged_type          : 54
type                 : 37 62 63 98 100 111 112 113 114 130 131 132 133 145 175
type_assign          : 33
type_constraints     : 162 163 165
type_ref             : 8 28 37 41 41 43 180 202 204
upper_end_point      : 146
upper_end_value      : 149 150
useful_type          : 60
value                : 144 151 153 175 193 194
value_assign         : 34
value_constraint     : 168
value_range          : 140


Parsing method: SLR


state 0

    (0) S' -> . module_list
    (1) module_list -> . module_list module_def
    (2) module_list -> . module_def
    (3) module_def -> . module_ident DEFINITIONS tag_default GETS BEGIN module_body END
    (8) module_ident -> . type_ref assigned_ident
    (211) type_ref -> . UCASE_IDENT

    UCASE_IDENT     shift and go to state 4


    module_list     shift and go to state 1
    module_def      shift and go to state 5
    module_ident    shift and go to state 2
    type_ref        shift and go to state 3

state 1

    (0) S' -> module_list .
    (1) module_list -> module_list . module_def
    (3) module_def -> . module_ident DEFINITIONS tag_default GETS BEGIN module_body END
    (8) module_ident -> . type_ref assigned_ident
    (211) type_ref -> . UCASE_IDENT

    UCASE_IDENT     shift and go to state 4


    module_def      shift and go to state 6
    module_ident    shift and go to state 2
    type_ref        shift and go to state 3

state 2

    (3) module_def -> module_ident . DEFINITIONS tag_default GETS BEGIN module_body END

    DEFINITIONS     shift and go to state 7



state 3

    (8) module_ident -> type_ref . assigned_ident
    (9) assigned_ident -> . oid_val
    (10) assigned_ident -> .
    (195) oid_val -> . LBRACE oid_comp_list RBRACE

    DEFINITIONS     reduce using rule 10 (assigned_ident -> .)
    SEMICOLON       reduce using rule 10 (assigned_ident -> .)
    UCASE_IDENT     reduce using rule 10 (assigned_ident -> .)
    LCASE_IDENT     reduce using rule 10 (assigned_ident -> .)
    LBRACE          shift and go to state 9


    assigned_ident  shift and go to state 10
    oid_val         shift and go to state 8

state 4

    (211) type_ref -> UCASE_IDENT .

    LBRACE          reduce using rule 211 (type_ref -> UCASE_IDENT .)
    DEFINITIONS     reduce using rule 211 (type_ref -> UCASE_IDENT .)
    SEMICOLON       reduce using rule 211 (type_ref -> UCASE_IDENT .)
    COMMA           reduce using rule 211 (type_ref -> UCASE_IDENT .)
    FROM            reduce using rule 211 (type_ref -> UCASE_IDENT .)
    GETS            reduce using rule 211 (type_ref -> UCASE_IDENT .)
    DOT             reduce using rule 211 (type_ref -> UCASE_IDENT .)
    END             reduce using rule 211 (type_ref -> UCASE_IDENT .)
    UCASE_IDENT     reduce using rule 211 (type_ref -> UCASE_IDENT .)
    LCASE_IDENT     reduce using rule 211 (type_ref -> UCASE_IDENT .)
    PYQUOTE         reduce using rule 211 (type_ref -> UCASE_IDENT .)
    RBRACE          reduce using rule 211 (type_ref -> UCASE_IDENT .)
    NUMBER          reduce using rule 211 (type_ref -> UCASE_IDENT .)
    LPAREN          reduce using rule 211 (type_ref -> UCASE_IDENT .)
    RPAREN          reduce using rule 211 (type_ref -> UCASE_IDENT .)
    BAR             reduce using rule 211 (type_ref -> UCASE_IDENT .)
    OPTIONAL        reduce using rule 211 (type_ref -> UCASE_IDENT .)
    DEFAULT         reduce using rule 211 (type_ref -> UCASE_IDENT .)



state 5

    (2) module_list -> module_def .

    $               reduce using rule 2 (module_list -> module_def .)
    UCASE_IDENT     reduce using rule 2 (module_list -> module_def .)



state 6

    (1) module_list -> module_list module_def .

    $               reduce using rule 1 (module_list -> module_list module_def .)
    UCASE_IDENT     reduce using rule 1 (module_list -> module_list module_def .)



state 7

    (3) module_def -> module_ident DEFINITIONS . tag_default GETS BEGIN module_body END
    (4) tag_default -> . EXPLICIT TAGS
    (5) tag_default -> . IMPLICIT TAGS
    (6) tag_default -> . AUTOMATIC TAGS
    (7) tag_default -> .

    EXPLICIT        shift and go to state 12
    IMPLICIT        shift and go to state 14
    AUTOMATIC       shift and go to state 13
    GETS            reduce using rule 7 (tag_default -> .)


    tag_default     shift and go to state 11

state 8

    (9) assigned_ident -> oid_val .

    DEFINITIONS     reduce using rule 9 (assigned_ident -> oid_val .)
    SEMICOLON       reduce using rule 9 (assigned_ident -> oid_val .)
    UCASE_IDENT     reduce using rule 9 (assigned_ident -> oid_val .)
    LCASE_IDENT     reduce using rule 9 (assigned_ident -> oid_val .)



state 9

    (195) oid_val -> LBRACE . oid_comp_list RBRACE
    (196) oid_comp_list -> . oid_comp_list oid_component
    (197) oid_comp_list -> . oid_component
    (198) oid_component -> . number_form
    (199) oid_component -> . name_form
    (200) oid_component -> . name_and_number_form
    (201) number_form -> . NUMBER
    (202) name_form -> . type_ref
    (203) name_and_number_form -> . identifier LPAREN number_form RPAREN
    (204) name_and_number_form -> . type_ref LPAREN number_form RPAREN
    (205) name_and_number_form -> . identifier LPAREN defined_value RPAREN
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    NUMBER          shift and go to state 18
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    oid_comp_list   shift and go to state 21
    identifier      shift and go to state 22
    name_and_number_form shift and go to state 16
    number_form     shift and go to state 23
    oid_component   shift and go to state 15
    type_ref        shift and go to state 19
    name_form       shift and go to state 20

state 10

    (8) module_ident -> type_ref assigned_ident .

    DEFINITIONS     reduce using rule 8 (module_ident -> type_ref assigned_ident .)
    SEMICOLON       reduce using rule 8 (module_ident -> type_ref assigned_ident .)
    UCASE_IDENT     reduce using rule 8 (module_ident -> type_ref assigned_ident .)
    LCASE_IDENT     reduce using rule 8 (module_ident -> type_ref assigned_ident .)



state 11

    (3) module_def -> module_ident DEFINITIONS tag_default . GETS BEGIN module_body END

    GETS            shift and go to state 24



state 12

    (4) tag_default -> EXPLICIT . TAGS

    TAGS            shift and go to state 25



state 13

    (6) tag_default -> AUTOMATIC . TAGS

    TAGS            shift and go to state 26



state 14

    (5) tag_default -> IMPLICIT . TAGS

    TAGS            shift and go to state 27



state 15

    (197) oid_comp_list -> oid_component .

    RBRACE          reduce using rule 197 (oid_comp_list -> oid_component .)
    NUMBER          reduce using rule 197 (oid_comp_list -> oid_component .)
    UCASE_IDENT     reduce using rule 197 (oid_comp_list -> oid_component .)
    LCASE_IDENT     reduce using rule 197 (oid_comp_list -> oid_component .)



state 16

    (200) oid_component -> name_and_number_form .

    RBRACE          reduce using rule 200 (oid_component -> name_and_number_form .)
    NUMBER          reduce using rule 200 (oid_component -> name_and_number_form .)
    UCASE_IDENT     reduce using rule 200 (oid_component -> name_and_number_form .)
    LCASE_IDENT     reduce using rule 200 (oid_component -> name_and_number_form .)



state 17

    (206) identifier -> LCASE_IDENT .

    SEMICOLON       reduce using rule 206 (identifier -> LCASE_IDENT .)
    COMMA           reduce using rule 206 (identifier -> LCASE_IDENT .)
    FROM            reduce using rule 206 (identifier -> LCASE_IDENT .)
    INTEGER         reduce using rule 206 (identifier -> LCASE_IDENT .)
    SEQUENCE        reduce using rule 206 (identifier -> LCASE_IDENT .)
    OBJECT_IDENTIFIER reduce using rule 206 (identifier -> LCASE_IDENT .)
    REAL            reduce using rule 206 (identifier -> LCASE_IDENT .)
    OCTET           reduce using rule 206 (identifier -> LCASE_IDENT .)
    BOOLEAN         reduce using rule 206 (identifier -> LCASE_IDENT .)
    BIT             reduce using rule 206 (identifier -> LCASE_IDENT .)
    NULL            reduce using rule 206 (identifier -> LCASE_IDENT .)
    SET             reduce using rule 206 (identifier -> LCASE_IDENT .)
    CHOICE          reduce using rule 206 (identifier -> LCASE_IDENT .)
    LCASE_IDENT     reduce using rule 206 (identifier -> LCASE_IDENT .)
    LBRACK          reduce using rule 206 (identifier -> LCASE_IDENT .)
    ANY             reduce using rule 206 (identifier -> LCASE_IDENT .)
    ENUMERATED      reduce using rule 206 (identifier -> LCASE_IDENT .)
    STRING_T        reduce using rule 206 (identifier -> LCASE_IDENT .)
    GENERALIZEDTIME reduce using rule 206 (identifier -> LCASE_IDENT .)
    UTCTIME         reduce using rule 206 (identifier -> LCASE_IDENT .)
    OBJECTDESCRIPTOR reduce using rule 206 (identifier -> LCASE_IDENT .)
    EXTERNAL        reduce using rule 206 (identifier -> LCASE_IDENT .)
    UCASE_IDENT     reduce using rule 206 (identifier -> LCASE_IDENT .)
    LPAREN          reduce using rule 206 (identifier -> LCASE_IDENT .)
    LT              reduce using rule 206 (identifier -> LCASE_IDENT .)
    END             reduce using rule 206 (identifier -> LCASE_IDENT .)
    PYQUOTE         reduce using rule 206 (identifier -> LCASE_IDENT .)
    PRESENT         reduce using rule 206 (identifier -> LCASE_IDENT .)
    ABSENT          reduce using rule 206 (identifier -> LCASE_IDENT .)
    OPTIONAL        reduce using rule 206 (identifier -> LCASE_IDENT .)
    RBRACE          reduce using rule 206 (identifier -> LCASE_IDENT .)
    RPAREN          reduce using rule 206 (identifier -> LCASE_IDENT .)
    RBRACK          reduce using rule 206 (identifier -> LCASE_IDENT .)
    BAR             reduce using rule 206 (identifier -> LCASE_IDENT .)
    RANGE           reduce using rule 206 (identifier -> LCASE_IDENT .)
    PLUS_INFINITY   reduce using rule 206 (identifier -> LCASE_IDENT .)
    MINUS_INFINITY  reduce using rule 206 (identifier -> LCASE_IDENT .)
    HSTRING         reduce using rule 206 (identifier -> LCASE_IDENT .)
    QSTRING         reduce using rule 206 (identifier -> LCASE_IDENT .)
    TRUE            reduce using rule 206 (identifier -> LCASE_IDENT .)
    FALSE           reduce using rule 206 (identifier -> LCASE_IDENT .)
    NUMBER          reduce using rule 206 (identifier -> LCASE_IDENT .)
    MINUS           reduce using rule 206 (identifier -> LCASE_IDENT .)
    BSTRING         reduce using rule 206 (identifier -> LCASE_IDENT .)
    GETS            reduce using rule 206 (identifier -> LCASE_IDENT .)
    DEFAULT         reduce using rule 206 (identifier -> LCASE_IDENT .)



state 18

    (201) number_form -> NUMBER .

    RBRACE          reduce using rule 201 (number_form -> NUMBER .)
    NUMBER          reduce using rule 201 (number_form -> NUMBER .)
    UCASE_IDENT     reduce using rule 201 (number_form -> NUMBER .)
    LCASE_IDENT     reduce using rule 201 (number_form -> NUMBER .)
    RPAREN          reduce using rule 201 (number_form -> NUMBER .)



state 19

    (202) name_form -> type_ref .
    (204) name_and_number_form -> type_ref . LPAREN number_form RPAREN

    RBRACE          reduce using rule 202 (name_form -> type_ref .)
    NUMBER          reduce using rule 202 (name_form -> type_ref .)
    UCASE_IDENT     reduce using rule 202 (name_form -> type_ref .)
    LCASE_IDENT     reduce using rule 202 (name_form -> type_ref .)
    LPAREN          shift and go to state 28



state 20

    (199) oid_component -> name_form .

    RBRACE          reduce using rule 199 (oid_component -> name_form .)
    NUMBER          reduce using rule 199 (oid_component -> name_form .)
    UCASE_IDENT     reduce using rule 199 (oid_component -> name_form .)
    LCASE_IDENT     reduce using rule 199 (oid_component -> name_form .)



state 21

    (195) oid_val -> LBRACE oid_comp_list . RBRACE
    (196) oid_comp_list -> oid_comp_list . oid_component
    (198) oid_component -> . number_form
    (199) oid_component -> . name_form
    (200) oid_component -> . name_and_number_form
    (201) number_form -> . NUMBER
    (202) name_form -> . type_ref
    (203) name_and_number_form -> . identifier LPAREN number_form RPAREN
    (204) name_and_number_form -> . type_ref LPAREN number_form RPAREN
    (205) name_and_number_form -> . identifier LPAREN defined_value RPAREN
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    RBRACE          shift and go to state 29
    NUMBER          shift and go to state 18
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 22
    name_and_number_form shift and go to state 16
    number_form     shift and go to state 23
    oid_component   shift and go to state 30
    type_ref        shift and go to state 19
    name_form       shift and go to state 20

state 22

    (203) name_and_number_form -> identifier . LPAREN number_form RPAREN
    (205) name_and_number_form -> identifier . LPAREN defined_value RPAREN

    LPAREN          shift and go to state 31

  ! LPAREN          [ shift and go to state 31 ]


state 23

    (198) oid_component -> number_form .

    RBRACE          reduce using rule 198 (oid_component -> number_form .)
    NUMBER          reduce using rule 198 (oid_component -> number_form .)
    UCASE_IDENT     reduce using rule 198 (oid_component -> number_form .)
    LCASE_IDENT     reduce using rule 198 (oid_component -> number_form .)



state 24

    (3) module_def -> module_ident DEFINITIONS tag_default GETS . BEGIN module_body END

    BEGIN           shift and go to state 32



state 25

    (4) tag_default -> EXPLICIT TAGS .

    GETS            reduce using rule 4 (tag_default -> EXPLICIT TAGS .)



state 26

    (6) tag_default -> AUTOMATIC TAGS .

    GETS            reduce using rule 6 (tag_default -> AUTOMATIC TAGS .)



state 27

    (5) tag_default -> IMPLICIT TAGS .

    GETS            reduce using rule 5 (tag_default -> IMPLICIT TAGS .)



state 28

    (204) name_and_number_form -> type_ref LPAREN . number_form RPAREN
    (201) number_form -> . NUMBER

    NUMBER          shift and go to state 18


    number_form     shift and go to state 33

state 29

    (195) oid_val -> LBRACE oid_comp_list RBRACE .

    DEFINITIONS     reduce using rule 195 (oid_val -> LBRACE oid_comp_list RBRACE .)
    SEMICOLON       reduce using rule 195 (oid_val -> LBRACE oid_comp_list RBRACE .)
    UCASE_IDENT     reduce using rule 195 (oid_val -> LBRACE oid_comp_list RBRACE .)
    LCASE_IDENT     reduce using rule 195 (oid_val -> LBRACE oid_comp_list RBRACE .)



state 30

    (196) oid_comp_list -> oid_comp_list oid_component .

    RBRACE          reduce using rule 196 (oid_comp_list -> oid_comp_list oid_component .)
    NUMBER          reduce using rule 196 (oid_comp_list -> oid_comp_list oid_component .)
    UCASE_IDENT     reduce using rule 196 (oid_comp_list -> oid_comp_list oid_component .)
    LCASE_IDENT     reduce using rule 196 (oid_comp_list -> oid_comp_list oid_component .)



state 31

    (203) name_and_number_form -> identifier LPAREN . number_form RPAREN
    (205) name_and_number_form -> identifier LPAREN . defined_value RPAREN
    (201) number_form -> . NUMBER
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    NUMBER          shift and go to state 18
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 34
    ext_val_ref     shift and go to state 37
    identifier      shift and go to state 38
    type_ref        shift and go to state 35
    number_form     shift and go to state 36

state 32

    (3) module_def -> module_ident DEFINITIONS tag_default GETS BEGIN . module_body END
    (11) module_body -> . exports imports assign_list
    (12) module_body -> .
    (13) exports -> . EXPORTS syms_exported SEMICOLON
    (14) exports -> .

    END             reduce using rule 12 (module_body -> .)
    EXPORTS         shift and go to state 40
    IMPORTS         reduce using rule 14 (exports -> .)
    UCASE_IDENT     reduce using rule 14 (exports -> .)
    LCASE_IDENT     reduce using rule 14 (exports -> .)
    PYQUOTE         reduce using rule 14 (exports -> .)


    exports         shift and go to state 39
    module_body     shift and go to state 41

state 33

    (204) name_and_number_form -> type_ref LPAREN number_form . RPAREN

    RPAREN          shift and go to state 42



state 34

    (205) name_and_number_form -> identifier LPAREN defined_value . RPAREN

    RPAREN          shift and go to state 43



state 35

    (180) ext_val_ref -> type_ref . DOT identifier

    DOT             shift and go to state 44



state 36

    (203) name_and_number_form -> identifier LPAREN number_form . RPAREN

    RPAREN          shift and go to state 45



state 37

    (178) defined_value -> ext_val_ref .

    RPAREN          reduce using rule 178 (defined_value -> ext_val_ref .)
    RBRACK          reduce using rule 178 (defined_value -> ext_val_ref .)
    COMMA           reduce using rule 178 (defined_value -> ext_val_ref .)
    BAR             reduce using rule 178 (defined_value -> ext_val_ref .)
    RANGE           reduce using rule 178 (defined_value -> ext_val_ref .)
    LT              reduce using rule 178 (defined_value -> ext_val_ref .)
    END             reduce using rule 178 (defined_value -> ext_val_ref .)
    UCASE_IDENT     reduce using rule 178 (defined_value -> ext_val_ref .)
    LCASE_IDENT     reduce using rule 178 (defined_value -> ext_val_ref .)
    PYQUOTE         reduce using rule 178 (defined_value -> ext_val_ref .)
    SEMICOLON       reduce using rule 178 (defined_value -> ext_val_ref .)
    RBRACE          reduce using rule 178 (defined_value -> ext_val_ref .)



state 38

    (179) defined_value -> identifier .

    RPAREN          reduce using rule 179 (defined_value -> identifier .)
    RBRACK          reduce using rule 179 (defined_value -> identifier .)
    COMMA           reduce using rule 179 (defined_value -> identifier .)
    BAR             reduce using rule 179 (defined_value -> identifier .)
    RANGE           reduce using rule 179 (defined_value -> identifier .)
    LT              reduce using rule 179 (defined_value -> identifier .)
    END             reduce using rule 179 (defined_value -> identifier .)
    UCASE_IDENT     reduce using rule 179 (defined_value -> identifier .)
    LCASE_IDENT     reduce using rule 179 (defined_value -> identifier .)
    PYQUOTE         reduce using rule 179 (defined_value -> identifier .)
    SEMICOLON       reduce using rule 179 (defined_value -> identifier .)
    RBRACE          reduce using rule 179 (defined_value -> identifier .)



state 39

    (11) module_body -> exports . imports assign_list
    (19) imports -> . IMPORTS syms_imported SEMICOLON
    (20) imports -> .

    IMPORTS         shift and go to state 46
    UCASE_IDENT     reduce using rule 20 (imports -> .)
    LCASE_IDENT     reduce using rule 20 (imports -> .)
    PYQUOTE         reduce using rule 20 (imports -> .)


    imports         shift and go to state 47

state 40

    (13) exports -> EXPORTS . syms_exported SEMICOLON
    (15) syms_exported -> . exp_sym_list
    (16) syms_exported -> .
    (17) exp_sym_list -> . symbol
    (18) exp_sym_list -> . exp_sym_list COMMA symbol
    (28) symbol -> . type_ref
    (29) symbol -> . identifier
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    SEMICOLON       reduce using rule 16 (syms_exported -> .)
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    symbol          shift and go to state 49
    identifier      shift and go to state 50
    exp_sym_list    shift and go to state 51
    type_ref        shift and go to state 52
    syms_exported   shift and go to state 48

state 41

    (3) module_def -> module_ident DEFINITIONS tag_default GETS BEGIN module_body . END

    END             shift and go to state 53



state 42

    (204) name_and_number_form -> type_ref LPAREN number_form RPAREN .

    RBRACE          reduce using rule 204 (name_and_number_form -> type_ref LPAREN number_form RPAREN .)
    NUMBER          reduce using rule 204 (name_and_number_form -> type_ref LPAREN number_form RPAREN .)
    UCASE_IDENT     reduce using rule 204 (name_and_number_form -> type_ref LPAREN number_form RPAREN .)
    LCASE_IDENT     reduce using rule 204 (name_and_number_form -> type_ref LPAREN number_form RPAREN .)



state 43

    (205) name_and_number_form -> identifier LPAREN defined_value RPAREN .

    RBRACE          reduce using rule 205 (name_and_number_form -> identifier LPAREN defined_value RPAREN .)
    NUMBER          reduce using rule 205 (name_and_number_form -> identifier LPAREN defined_value RPAREN .)
    UCASE_IDENT     reduce using rule 205 (name_and_number_form -> identifier LPAREN defined_value RPAREN .)
    LCASE_IDENT     reduce using rule 205 (name_and_number_form -> identifier LPAREN defined_value RPAREN .)



state 44

    (180) ext_val_ref -> type_ref DOT . identifier
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 54

state 45

    (203) name_and_number_form -> identifier LPAREN number_form RPAREN .

    RBRACE          reduce using rule 203 (name_and_number_form -> identifier LPAREN number_form RPAREN .)
    NUMBER          reduce using rule 203 (name_and_number_form -> identifier LPAREN number_form RPAREN .)
    UCASE_IDENT     reduce using rule 203 (name_and_number_form -> identifier LPAREN number_form RPAREN .)
    LCASE_IDENT     reduce using rule 203 (name_and_number_form -> identifier LPAREN number_form RPAREN .)



state 46

    (19) imports -> IMPORTS . syms_imported SEMICOLON
    (21) syms_imported -> .
    (22) syms_imported -> . syms_from_module_list
    (23) syms_from_module_list -> . syms_from_module_list syms_from_module
    (24) syms_from_module_list -> . syms_from_module
    (25) syms_from_module -> . symbol_list FROM module_ident
    (26) symbol_list -> . symbol_list COMMA symbol
    (27) symbol_list -> . symbol
    (28) symbol -> . type_ref
    (29) symbol -> . identifier
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    SEMICOLON       reduce using rule 21 (syms_imported -> .)
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    syms_from_module shift and go to state 56
    identifier      shift and go to state 50
    symbol_list     shift and go to state 59
    syms_imported   shift and go to state 58
    syms_from_module_list shift and go to state 57
    symbol          shift and go to state 55
    type_ref        shift and go to state 52

state 47

    (11) module_body -> exports imports . assign_list
    (30) assign_list -> . assign_list assign
    (31) assign_list -> . assign SEMICOLON
    (32) assign_list -> . assign
    (33) assign -> . type_assign
    (34) assign -> . value_assign
    (35) assign -> . pyquote
    (37) type_assign -> . type_ref GETS type
    (175) value_assign -> . identifier type GETS value
    (36) pyquote -> . PYQUOTE
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    PYQUOTE         shift and go to state 64
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    value_assign    shift and go to state 61
    type_assign     shift and go to state 63
    type_ref        shift and go to state 62
    pyquote         shift and go to state 65
    assign_list     shift and go to state 66
    identifier      shift and go to state 60
    assign          shift and go to state 67

state 48

    (13) exports -> EXPORTS syms_exported . SEMICOLON

    SEMICOLON       shift and go to state 68



state 49

    (17) exp_sym_list -> symbol .

    SEMICOLON       reduce using rule 17 (exp_sym_list -> symbol .)
    COMMA           reduce using rule 17 (exp_sym_list -> symbol .)



state 50

    (29) symbol -> identifier .

    SEMICOLON       reduce using rule 29 (symbol -> identifier .)
    COMMA           reduce using rule 29 (symbol -> identifier .)
    FROM            reduce using rule 29 (symbol -> identifier .)



state 51

    (15) syms_exported -> exp_sym_list .
    (18) exp_sym_list -> exp_sym_list . COMMA symbol

    SEMICOLON       reduce using rule 15 (syms_exported -> exp_sym_list .)
    COMMA           shift and go to state 69



state 52

    (28) symbol -> type_ref .

    SEMICOLON       reduce using rule 28 (symbol -> type_ref .)
    COMMA           reduce using rule 28 (symbol -> type_ref .)
    FROM            reduce using rule 28 (symbol -> type_ref .)



state 53

    (3) module_def -> module_ident DEFINITIONS tag_default GETS BEGIN module_body END .

    $               reduce using rule 3 (module_def -> module_ident DEFINITIONS tag_default GETS BEGIN module_body END .)
    UCASE_IDENT     reduce using rule 3 (module_def -> module_ident DEFINITIONS tag_default GETS BEGIN module_body END .)



state 54

    (180) ext_val_ref -> type_ref DOT identifier .

    RPAREN          reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    RBRACK          reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    COMMA           reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    BAR             reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    RANGE           reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    LT              reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    END             reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    UCASE_IDENT     reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    LCASE_IDENT     reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    PYQUOTE         reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    SEMICOLON       reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)
    RBRACE          reduce using rule 180 (ext_val_ref -> type_ref DOT identifier .)



state 55

    (27) symbol_list -> symbol .

    FROM            reduce using rule 27 (symbol_list -> symbol .)
    COMMA           reduce using rule 27 (symbol_list -> symbol .)



state 56

    (24) syms_from_module_list -> syms_from_module .

    SEMICOLON       reduce using rule 24 (syms_from_module_list -> syms_from_module .)
    UCASE_IDENT     reduce using rule 24 (syms_from_module_list -> syms_from_module .)
    LCASE_IDENT     reduce using rule 24 (syms_from_module_list -> syms_from_module .)



state 57

    (22) syms_imported -> syms_from_module_list .
    (23) syms_from_module_list -> syms_from_module_list . syms_from_module
    (25) syms_from_module -> . symbol_list FROM module_ident
    (26) symbol_list -> . symbol_list COMMA symbol
    (27) symbol_list -> . symbol
    (28) symbol -> . type_ref
    (29) symbol -> . identifier
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    SEMICOLON       reduce using rule 22 (syms_imported -> syms_from_module_list .)
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    syms_from_module shift and go to state 70
    identifier      shift and go to state 50
    symbol_list     shift and go to state 59
    symbol          shift and go to state 55
    type_ref        shift and go to state 52

state 58

    (19) imports -> IMPORTS syms_imported . SEMICOLON

    SEMICOLON       shift and go to state 71



state 59

    (25) syms_from_module -> symbol_list . FROM module_ident
    (26) symbol_list -> symbol_list . COMMA symbol

    FROM            shift and go to state 72
    COMMA           shift and go to state 73



state 60

    (175) value_assign -> identifier . type GETS value
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    defined_type    shift and go to state 89
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 95
    any_type        shift and go to state 116

state 61

    (34) assign -> value_assign .

    END             reduce using rule 34 (assign -> value_assign .)
    UCASE_IDENT     reduce using rule 34 (assign -> value_assign .)
    LCASE_IDENT     reduce using rule 34 (assign -> value_assign .)
    PYQUOTE         reduce using rule 34 (assign -> value_assign .)
    SEMICOLON       reduce using rule 34 (assign -> value_assign .)



state 62

    (37) type_assign -> type_ref . GETS type

    GETS            shift and go to state 117



state 63

    (33) assign -> type_assign .

    END             reduce using rule 33 (assign -> type_assign .)
    UCASE_IDENT     reduce using rule 33 (assign -> type_assign .)
    LCASE_IDENT     reduce using rule 33 (assign -> type_assign .)
    PYQUOTE         reduce using rule 33 (assign -> type_assign .)
    SEMICOLON       reduce using rule 33 (assign -> type_assign .)



state 64

    (36) pyquote -> PYQUOTE .

    END             reduce using rule 36 (pyquote -> PYQUOTE .)
    UCASE_IDENT     reduce using rule 36 (pyquote -> PYQUOTE .)
    LCASE_IDENT     reduce using rule 36 (pyquote -> PYQUOTE .)
    PYQUOTE         reduce using rule 36 (pyquote -> PYQUOTE .)
    SEMICOLON       reduce using rule 36 (pyquote -> PYQUOTE .)



state 65

    (35) assign -> pyquote .

    END             reduce using rule 35 (assign -> pyquote .)
    UCASE_IDENT     reduce using rule 35 (assign -> pyquote .)
    LCASE_IDENT     reduce using rule 35 (assign -> pyquote .)
    PYQUOTE         reduce using rule 35 (assign -> pyquote .)
    SEMICOLON       reduce using rule 35 (assign -> pyquote .)



state 66

    (11) module_body -> exports imports assign_list .
    (30) assign_list -> assign_list . assign
    (33) assign -> . type_assign
    (34) assign -> . value_assign
    (35) assign -> . pyquote
    (37) type_assign -> . type_ref GETS type
    (175) value_assign -> . identifier type GETS value
    (36) pyquote -> . PYQUOTE
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    END             reduce using rule 11 (module_body -> exports imports assign_list .)
    PYQUOTE         shift and go to state 64
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    value_assign    shift and go to state 61
    type_assign     shift and go to state 63
    type_ref        shift and go to state 62
    pyquote         shift and go to state 65
    identifier      shift and go to state 60
    assign          shift and go to state 118

state 67

    (31) assign_list -> assign . SEMICOLON
    (32) assign_list -> assign .

    SEMICOLON       shift and go to state 119
    END             reduce using rule 32 (assign_list -> assign .)
    UCASE_IDENT     reduce using rule 32 (assign_list -> assign .)
    LCASE_IDENT     reduce using rule 32 (assign_list -> assign .)
    PYQUOTE         reduce using rule 32 (assign_list -> assign .)



state 68

    (13) exports -> EXPORTS syms_exported SEMICOLON .

    IMPORTS         reduce using rule 13 (exports -> EXPORTS syms_exported SEMICOLON .)
    UCASE_IDENT     reduce using rule 13 (exports -> EXPORTS syms_exported SEMICOLON .)
    LCASE_IDENT     reduce using rule 13 (exports -> EXPORTS syms_exported SEMICOLON .)
    PYQUOTE         reduce using rule 13 (exports -> EXPORTS syms_exported SEMICOLON .)



state 69

    (18) exp_sym_list -> exp_sym_list COMMA . symbol
    (28) symbol -> . type_ref
    (29) symbol -> . identifier
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    symbol          shift and go to state 120
    identifier      shift and go to state 50
    type_ref        shift and go to state 52

state 70

    (23) syms_from_module_list -> syms_from_module_list syms_from_module .

    SEMICOLON       reduce using rule 23 (syms_from_module_list -> syms_from_module_list syms_from_module .)
    UCASE_IDENT     reduce using rule 23 (syms_from_module_list -> syms_from_module_list syms_from_module .)
    LCASE_IDENT     reduce using rule 23 (syms_from_module_list -> syms_from_module_list syms_from_module .)



state 71

    (19) imports -> IMPORTS syms_imported SEMICOLON .

    UCASE_IDENT     reduce using rule 19 (imports -> IMPORTS syms_imported SEMICOLON .)
    LCASE_IDENT     reduce using rule 19 (imports -> IMPORTS syms_imported SEMICOLON .)
    PYQUOTE         reduce using rule 19 (imports -> IMPORTS syms_imported SEMICOLON .)



state 72

    (25) syms_from_module -> symbol_list FROM . module_ident
    (8) module_ident -> . type_ref assigned_ident
    (211) type_ref -> . UCASE_IDENT

    UCASE_IDENT     shift and go to state 4


    module_ident    shift and go to state 121
    type_ref        shift and go to state 3

state 73

    (26) symbol_list -> symbol_list COMMA . symbol
    (28) symbol -> . type_ref
    (29) symbol -> . identifier
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT

    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17


    symbol          shift and go to state 122
    identifier      shift and go to state 50
    type_ref        shift and go to state 52

state 74

    (75) real_type -> REAL .

    END             reduce using rule 75 (real_type -> REAL .)
    UCASE_IDENT     reduce using rule 75 (real_type -> REAL .)
    LCASE_IDENT     reduce using rule 75 (real_type -> REAL .)
    PYQUOTE         reduce using rule 75 (real_type -> REAL .)
    SEMICOLON       reduce using rule 75 (real_type -> REAL .)
    LPAREN          reduce using rule 75 (real_type -> REAL .)
    RPAREN          reduce using rule 75 (real_type -> REAL .)
    COMMA           reduce using rule 75 (real_type -> REAL .)
    BAR             reduce using rule 75 (real_type -> REAL .)
    GETS            reduce using rule 75 (real_type -> REAL .)
    RBRACE          reduce using rule 75 (real_type -> REAL .)
    OPTIONAL        reduce using rule 75 (real_type -> REAL .)
    DEFAULT         reduce using rule 75 (real_type -> REAL .)



state 75

    (101) choice_type -> CHOICE . LBRACE alternative_type_lists RBRACE

    LBRACE          shift and go to state 123



state 76

    (43) defined_type -> type_ref .
    (41) ext_type_ref -> type_ref . DOT type_ref

    END             reduce using rule 43 (defined_type -> type_ref .)
    UCASE_IDENT     reduce using rule 43 (defined_type -> type_ref .)
    LCASE_IDENT     reduce using rule 43 (defined_type -> type_ref .)
    PYQUOTE         reduce using rule 43 (defined_type -> type_ref .)
    SEMICOLON       reduce using rule 43 (defined_type -> type_ref .)
    LPAREN          reduce using rule 43 (defined_type -> type_ref .)
    RPAREN          reduce using rule 43 (defined_type -> type_ref .)
    COMMA           reduce using rule 43 (defined_type -> type_ref .)
    BAR             reduce using rule 43 (defined_type -> type_ref .)
    GETS            reduce using rule 43 (defined_type -> type_ref .)
    RBRACE          reduce using rule 43 (defined_type -> type_ref .)
    OPTIONAL        reduce using rule 43 (defined_type -> type_ref .)
    DEFAULT         reduce using rule 43 (defined_type -> type_ref .)
    DOT             shift and go to state 124



state 77

    (115) tag -> LBRACK . class class_number RBRACK
    (118) class -> . UNIVERSAL
    (119) class -> . APPLICATION
    (120) class -> . PRIVATE
    (121) class -> .

    UNIVERSAL       shift and go to state 126
    APPLICATION     shift and go to state 125
    PRIVATE         shift and go to state 127
    NUMBER          reduce using rule 121 (class -> .)
    UCASE_IDENT     reduce using rule 121 (class -> .)
    LCASE_IDENT     reduce using rule 121 (class -> .)


    class           shift and go to state 128

state 78

    (45) builtin_type -> integer_type .

    END             reduce using rule 45 (builtin_type -> integer_type .)
    UCASE_IDENT     reduce using rule 45 (builtin_type -> integer_type .)
    LCASE_IDENT     reduce using rule 45 (builtin_type -> integer_type .)
    PYQUOTE         reduce using rule 45 (builtin_type -> integer_type .)
    SEMICOLON       reduce using rule 45 (builtin_type -> integer_type .)
    LPAREN          reduce using rule 45 (builtin_type -> integer_type .)
    RPAREN          reduce using rule 45 (builtin_type -> integer_type .)
    COMMA           reduce using rule 45 (builtin_type -> integer_type .)
    BAR             reduce using rule 45 (builtin_type -> integer_type .)
    GETS            reduce using rule 45 (builtin_type -> integer_type .)
    RBRACE          reduce using rule 45 (builtin_type -> integer_type .)
    OPTIONAL        reduce using rule 45 (builtin_type -> integer_type .)
    DEFAULT         reduce using rule 45 (builtin_type -> integer_type .)



state 79

    (58) builtin_type -> real_type .

    END             reduce using rule 58 (builtin_type -> real_type .)
    UCASE_IDENT     reduce using rule 58 (builtin_type -> real_type .)
    LCASE_IDENT     reduce using rule 58 (builtin_type -> real_type .)
    PYQUOTE         reduce using rule 58 (builtin_type -> real_type .)
    SEMICOLON       reduce using rule 58 (builtin_type -> real_type .)
    LPAREN          reduce using rule 58 (builtin_type -> real_type .)
    RPAREN          reduce using rule 58 (builtin_type -> real_type .)
    COMMA           reduce using rule 58 (builtin_type -> real_type .)
    BAR             reduce using rule 58 (builtin_type -> real_type .)
    GETS            reduce using rule 58 (builtin_type -> real_type .)
    RBRACE          reduce using rule 58 (builtin_type -> real_type .)
    OPTIONAL        reduce using rule 58 (builtin_type -> real_type .)
    DEFAULT         reduce using rule 58 (builtin_type -> real_type .)



state 80

    (112) tagged_type -> tag . type
    (113) tagged_type -> tag . IMPLICIT type
    (114) tagged_type -> tag . EXPLICIT type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    IMPLICIT        shift and go to state 130
    EXPLICIT        shift and go to state 129
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 131
    boolean_type    shift and go to state 115

state 81

    (56) builtin_type -> oid_type .

    END             reduce using rule 56 (builtin_type -> oid_type .)
    UCASE_IDENT     reduce using rule 56 (builtin_type -> oid_type .)
    LCASE_IDENT     reduce using rule 56 (builtin_type -> oid_type .)
    PYQUOTE         reduce using rule 56 (builtin_type -> oid_type .)
    SEMICOLON       reduce using rule 56 (builtin_type -> oid_type .)
    LPAREN          reduce using rule 56 (builtin_type -> oid_type .)
    RPAREN          reduce using rule 56 (builtin_type -> oid_type .)
    COMMA           reduce using rule 56 (builtin_type -> oid_type .)
    BAR             reduce using rule 56 (builtin_type -> oid_type .)
    GETS            reduce using rule 56 (builtin_type -> oid_type .)
    RBRACE          reduce using rule 56 (builtin_type -> oid_type .)
    OPTIONAL        reduce using rule 56 (builtin_type -> oid_type .)
    DEFAULT         reduce using rule 56 (builtin_type -> oid_type .)



state 82

    (60) builtin_type -> useful_type .

    END             reduce using rule 60 (builtin_type -> useful_type .)
    UCASE_IDENT     reduce using rule 60 (builtin_type -> useful_type .)
    LCASE_IDENT     reduce using rule 60 (builtin_type -> useful_type .)
    PYQUOTE         reduce using rule 60 (builtin_type -> useful_type .)
    SEMICOLON       reduce using rule 60 (builtin_type -> useful_type .)
    LPAREN          reduce using rule 60 (builtin_type -> useful_type .)
    RPAREN          reduce using rule 60 (builtin_type -> useful_type .)
    COMMA           reduce using rule 60 (builtin_type -> useful_type .)
    BAR             reduce using rule 60 (builtin_type -> useful_type .)
    GETS            reduce using rule 60 (builtin_type -> useful_type .)
    RBRACE          reduce using rule 60 (builtin_type -> useful_type .)
    OPTIONAL        reduce using rule 60 (builtin_type -> useful_type .)
    DEFAULT         reduce using rule 60 (builtin_type -> useful_type .)



state 83

    (79) null_type -> NULL .

    END             reduce using rule 79 (null_type -> NULL .)
    UCASE_IDENT     reduce using rule 79 (null_type -> NULL .)
    LCASE_IDENT     reduce using rule 79 (null_type -> NULL .)
    PYQUOTE         reduce using rule 79 (null_type -> NULL .)
    SEMICOLON       reduce using rule 79 (null_type -> NULL .)
    LPAREN          reduce using rule 79 (null_type -> NULL .)
    RPAREN          reduce using rule 79 (null_type -> NULL .)
    COMMA           reduce using rule 79 (null_type -> NULL .)
    BAR             reduce using rule 79 (null_type -> NULL .)
    GETS            reduce using rule 79 (null_type -> NULL .)
    RBRACE          reduce using rule 79 (null_type -> NULL .)
    OPTIONAL        reduce using rule 79 (null_type -> NULL .)
    DEFAULT         reduce using rule 79 (null_type -> NULL .)



state 84

    (128) useful_type -> EXTERNAL .

    END             reduce using rule 128 (useful_type -> EXTERNAL .)
    UCASE_IDENT     reduce using rule 128 (useful_type -> EXTERNAL .)
    LCASE_IDENT     reduce using rule 128 (useful_type -> EXTERNAL .)
    PYQUOTE         reduce using rule 128 (useful_type -> EXTERNAL .)
    SEMICOLON       reduce using rule 128 (useful_type -> EXTERNAL .)
    LPAREN          reduce using rule 128 (useful_type -> EXTERNAL .)
    RPAREN          reduce using rule 128 (useful_type -> EXTERNAL .)
    COMMA           reduce using rule 128 (useful_type -> EXTERNAL .)
    BAR             reduce using rule 128 (useful_type -> EXTERNAL .)
    GETS            reduce using rule 128 (useful_type -> EXTERNAL .)
    RBRACE          reduce using rule 128 (useful_type -> EXTERNAL .)
    OPTIONAL        reduce using rule 128 (useful_type -> EXTERNAL .)
    DEFAULT         reduce using rule 128 (useful_type -> EXTERNAL .)



state 85

    (131) sub_type -> SET . size_constraint OF type
    (99) set_type -> SET . LBRACE element_type_list RBRACE
    (100) setof_type -> SET . OF type
    (155) size_constraint -> . SIZE subtype_spec

    LBRACE          shift and go to state 132
    OF              shift and go to state 133
    SIZE            shift and go to state 135


    size_constraint shift and go to state 134

state 86

    (125) useful_type -> GENERALIZEDTIME .

    END             reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    UCASE_IDENT     reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    LCASE_IDENT     reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    PYQUOTE         reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    SEMICOLON       reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    LPAREN          reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    RPAREN          reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    COMMA           reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    BAR             reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    GETS            reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    RBRACE          reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    OPTIONAL        reduce using rule 125 (useful_type -> GENERALIZEDTIME .)
    DEFAULT         reduce using rule 125 (useful_type -> GENERALIZEDTIME .)



state 87

    (132) sub_type -> SEQUENCE . size_constraint OF type
    (133) sub_type -> SEQUENCE . LPAREN size_constraint RPAREN OF type
    (80) sequence_type -> SEQUENCE . LBRACE component_type_lists RBRACE
    (81) sequence_type -> SEQUENCE . LBRACE RBRACE
    (98) sequenceof_type -> SEQUENCE . OF type
    (155) size_constraint -> . SIZE subtype_spec

    LPAREN          shift and go to state 139
    LBRACE          shift and go to state 136
    OF              shift and go to state 137
    SIZE            shift and go to state 135

  ! LBRACE          [ shift and go to state 136 ]

    size_constraint shift and go to state 138

state 88

    (127) useful_type -> OBJECTDESCRIPTOR .

    END             reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    UCASE_IDENT     reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    LCASE_IDENT     reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    PYQUOTE         reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    SEMICOLON       reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    LPAREN          reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    RPAREN          reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    COMMA           reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    BAR             reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    GETS            reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    RBRACE          reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    OPTIONAL        reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)
    DEFAULT         reduce using rule 127 (useful_type -> OBJECTDESCRIPTOR .)



state 89

    (39) type -> defined_type .

    END             reduce using rule 39 (type -> defined_type .)
    UCASE_IDENT     reduce using rule 39 (type -> defined_type .)
    LCASE_IDENT     reduce using rule 39 (type -> defined_type .)
    PYQUOTE         reduce using rule 39 (type -> defined_type .)
    SEMICOLON       reduce using rule 39 (type -> defined_type .)
    LPAREN          reduce using rule 39 (type -> defined_type .)
    RPAREN          reduce using rule 39 (type -> defined_type .)
    COMMA           reduce using rule 39 (type -> defined_type .)
    BAR             reduce using rule 39 (type -> defined_type .)
    GETS            reduce using rule 39 (type -> defined_type .)
    RBRACE          reduce using rule 39 (type -> defined_type .)
    OPTIONAL        reduce using rule 39 (type -> defined_type .)
    DEFAULT         reduce using rule 39 (type -> defined_type .)



state 90

    (48) builtin_type -> sequence_type .

    END             reduce using rule 48 (builtin_type -> sequence_type .)
    UCASE_IDENT     reduce using rule 48 (builtin_type -> sequence_type .)
    LCASE_IDENT     reduce using rule 48 (builtin_type -> sequence_type .)
    PYQUOTE         reduce using rule 48 (builtin_type -> sequence_type .)
    SEMICOLON       reduce using rule 48 (builtin_type -> sequence_type .)
    LPAREN          reduce using rule 48 (builtin_type -> sequence_type .)
    RPAREN          reduce using rule 48 (builtin_type -> sequence_type .)
    COMMA           reduce using rule 48 (builtin_type -> sequence_type .)
    BAR             reduce using rule 48 (builtin_type -> sequence_type .)
    GETS            reduce using rule 48 (builtin_type -> sequence_type .)
    RBRACE          reduce using rule 48 (builtin_type -> sequence_type .)
    OPTIONAL        reduce using rule 48 (builtin_type -> sequence_type .)
    DEFAULT         reduce using rule 48 (builtin_type -> sequence_type .)



state 91

    (38) type -> builtin_type .

    END             reduce using rule 38 (type -> builtin_type .)
    UCASE_IDENT     reduce using rule 38 (type -> builtin_type .)
    LCASE_IDENT     reduce using rule 38 (type -> builtin_type .)
    PYQUOTE         reduce using rule 38 (type -> builtin_type .)
    SEMICOLON       reduce using rule 38 (type -> builtin_type .)
    LPAREN          reduce using rule 38 (type -> builtin_type .)
    RPAREN          reduce using rule 38 (type -> builtin_type .)
    COMMA           reduce using rule 38 (type -> builtin_type .)
    BAR             reduce using rule 38 (type -> builtin_type .)
    GETS            reduce using rule 38 (type -> builtin_type .)
    RBRACE          reduce using rule 38 (type -> builtin_type .)
    OPTIONAL        reduce using rule 38 (type -> builtin_type .)
    DEFAULT         reduce using rule 38 (type -> builtin_type .)



state 92

    (46) builtin_type -> bitstring_type .

    END             reduce using rule 46 (builtin_type -> bitstring_type .)
    UCASE_IDENT     reduce using rule 46 (builtin_type -> bitstring_type .)
    LCASE_IDENT     reduce using rule 46 (builtin_type -> bitstring_type .)
    PYQUOTE         reduce using rule 46 (builtin_type -> bitstring_type .)
    SEMICOLON       reduce using rule 46 (builtin_type -> bitstring_type .)
    LPAREN          reduce using rule 46 (builtin_type -> bitstring_type .)
    RPAREN          reduce using rule 46 (builtin_type -> bitstring_type .)
    COMMA           reduce using rule 46 (builtin_type -> bitstring_type .)
    BAR             reduce using rule 46 (builtin_type -> bitstring_type .)
    GETS            reduce using rule 46 (builtin_type -> bitstring_type .)
    RBRACE          reduce using rule 46 (builtin_type -> bitstring_type .)
    OPTIONAL        reduce using rule 46 (builtin_type -> bitstring_type .)
    DEFAULT         reduce using rule 46 (builtin_type -> bitstring_type .)



state 93

    (65) integer_type -> INTEGER .
    (66) integer_type -> INTEGER . LBRACE named_number_list RBRACE

    END             reduce using rule 65 (integer_type -> INTEGER .)
    UCASE_IDENT     reduce using rule 65 (integer_type -> INTEGER .)
    LCASE_IDENT     reduce using rule 65 (integer_type -> INTEGER .)
    PYQUOTE         reduce using rule 65 (integer_type -> INTEGER .)
    SEMICOLON       reduce using rule 65 (integer_type -> INTEGER .)
    LPAREN          reduce using rule 65 (integer_type -> INTEGER .)
    RPAREN          reduce using rule 65 (integer_type -> INTEGER .)
    COMMA           reduce using rule 65 (integer_type -> INTEGER .)
    BAR             reduce using rule 65 (integer_type -> INTEGER .)
    GETS            reduce using rule 65 (integer_type -> INTEGER .)
    RBRACE          reduce using rule 65 (integer_type -> INTEGER .)
    OPTIONAL        reduce using rule 65 (integer_type -> INTEGER .)
    DEFAULT         reduce using rule 65 (integer_type -> INTEGER .)
    LBRACE          shift and go to state 140



state 94

    (76) bitstring_type -> BIT . STRING
    (77) bitstring_type -> BIT . STRING LBRACE named_bit_list RBRACE

    STRING          shift and go to state 141

  ! STRING          [ shift and go to state 141 ]


state 95

    (175) value_assign -> identifier type . GETS value
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    GETS            shift and go to state 142
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 96

    (42) defined_type -> ext_type_ref .

    END             reduce using rule 42 (defined_type -> ext_type_ref .)
    UCASE_IDENT     reduce using rule 42 (defined_type -> ext_type_ref .)
    LCASE_IDENT     reduce using rule 42 (defined_type -> ext_type_ref .)
    PYQUOTE         reduce using rule 42 (defined_type -> ext_type_ref .)
    SEMICOLON       reduce using rule 42 (defined_type -> ext_type_ref .)
    LPAREN          reduce using rule 42 (defined_type -> ext_type_ref .)
    RPAREN          reduce using rule 42 (defined_type -> ext_type_ref .)
    COMMA           reduce using rule 42 (defined_type -> ext_type_ref .)
    BAR             reduce using rule 42 (defined_type -> ext_type_ref .)
    GETS            reduce using rule 42 (defined_type -> ext_type_ref .)
    RBRACE          reduce using rule 42 (defined_type -> ext_type_ref .)
    OPTIONAL        reduce using rule 42 (defined_type -> ext_type_ref .)
    DEFAULT         reduce using rule 42 (defined_type -> ext_type_ref .)



state 97

    (53) builtin_type -> selection_type .

    END             reduce using rule 53 (builtin_type -> selection_type .)
    UCASE_IDENT     reduce using rule 53 (builtin_type -> selection_type .)
    LCASE_IDENT     reduce using rule 53 (builtin_type -> selection_type .)
    PYQUOTE         reduce using rule 53 (builtin_type -> selection_type .)
    SEMICOLON       reduce using rule 53 (builtin_type -> selection_type .)
    LPAREN          reduce using rule 53 (builtin_type -> selection_type .)
    RPAREN          reduce using rule 53 (builtin_type -> selection_type .)
    COMMA           reduce using rule 53 (builtin_type -> selection_type .)
    BAR             reduce using rule 53 (builtin_type -> selection_type .)
    GETS            reduce using rule 53 (builtin_type -> selection_type .)
    RBRACE          reduce using rule 53 (builtin_type -> selection_type .)
    OPTIONAL        reduce using rule 53 (builtin_type -> selection_type .)
    DEFAULT         reduce using rule 53 (builtin_type -> selection_type .)



state 98

    (61) builtin_type -> OCTET . STRING

    STRING          shift and go to state 145



state 99

    (50) builtin_type -> set_type .

    END             reduce using rule 50 (builtin_type -> set_type .)
    UCASE_IDENT     reduce using rule 50 (builtin_type -> set_type .)
    LCASE_IDENT     reduce using rule 50 (builtin_type -> set_type .)
    PYQUOTE         reduce using rule 50 (builtin_type -> set_type .)
    SEMICOLON       reduce using rule 50 (builtin_type -> set_type .)
    LPAREN          reduce using rule 50 (builtin_type -> set_type .)
    RPAREN          reduce using rule 50 (builtin_type -> set_type .)
    COMMA           reduce using rule 50 (builtin_type -> set_type .)
    BAR             reduce using rule 50 (builtin_type -> set_type .)
    GETS            reduce using rule 50 (builtin_type -> set_type .)
    RBRACE          reduce using rule 50 (builtin_type -> set_type .)
    OPTIONAL        reduce using rule 50 (builtin_type -> set_type .)
    DEFAULT         reduce using rule 50 (builtin_type -> set_type .)



state 100

    (54) builtin_type -> tagged_type .

    END             reduce using rule 54 (builtin_type -> tagged_type .)
    UCASE_IDENT     reduce using rule 54 (builtin_type -> tagged_type .)
    LCASE_IDENT     reduce using rule 54 (builtin_type -> tagged_type .)
    PYQUOTE         reduce using rule 54 (builtin_type -> tagged_type .)
    SEMICOLON       reduce using rule 54 (builtin_type -> tagged_type .)
    LPAREN          reduce using rule 54 (builtin_type -> tagged_type .)
    RPAREN          reduce using rule 54 (builtin_type -> tagged_type .)
    COMMA           reduce using rule 54 (builtin_type -> tagged_type .)
    BAR             reduce using rule 54 (builtin_type -> tagged_type .)
    GETS            reduce using rule 54 (builtin_type -> tagged_type .)
    RBRACE          reduce using rule 54 (builtin_type -> tagged_type .)
    OPTIONAL        reduce using rule 54 (builtin_type -> tagged_type .)
    DEFAULT         reduce using rule 54 (builtin_type -> tagged_type .)



state 101

    (51) builtin_type -> setof_type .

    END             reduce using rule 51 (builtin_type -> setof_type .)
    UCASE_IDENT     reduce using rule 51 (builtin_type -> setof_type .)
    LCASE_IDENT     reduce using rule 51 (builtin_type -> setof_type .)
    PYQUOTE         reduce using rule 51 (builtin_type -> setof_type .)
    SEMICOLON       reduce using rule 51 (builtin_type -> setof_type .)
    LPAREN          reduce using rule 51 (builtin_type -> setof_type .)
    RPAREN          reduce using rule 51 (builtin_type -> setof_type .)
    COMMA           reduce using rule 51 (builtin_type -> setof_type .)
    BAR             reduce using rule 51 (builtin_type -> setof_type .)
    GETS            reduce using rule 51 (builtin_type -> setof_type .)
    RBRACE          reduce using rule 51 (builtin_type -> setof_type .)
    OPTIONAL        reduce using rule 51 (builtin_type -> setof_type .)
    DEFAULT         reduce using rule 51 (builtin_type -> setof_type .)



state 102

    (59) builtin_type -> char_str_type .

    END             reduce using rule 59 (builtin_type -> char_str_type .)
    UCASE_IDENT     reduce using rule 59 (builtin_type -> char_str_type .)
    LCASE_IDENT     reduce using rule 59 (builtin_type -> char_str_type .)
    PYQUOTE         reduce using rule 59 (builtin_type -> char_str_type .)
    SEMICOLON       reduce using rule 59 (builtin_type -> char_str_type .)
    LPAREN          reduce using rule 59 (builtin_type -> char_str_type .)
    RPAREN          reduce using rule 59 (builtin_type -> char_str_type .)
    COMMA           reduce using rule 59 (builtin_type -> char_str_type .)
    BAR             reduce using rule 59 (builtin_type -> char_str_type .)
    GETS            reduce using rule 59 (builtin_type -> char_str_type .)
    RBRACE          reduce using rule 59 (builtin_type -> char_str_type .)
    OPTIONAL        reduce using rule 59 (builtin_type -> char_str_type .)
    DEFAULT         reduce using rule 59 (builtin_type -> char_str_type .)



state 103

    (124) oid_type -> OBJECT_IDENTIFIER .

    END             reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    UCASE_IDENT     reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    LCASE_IDENT     reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    PYQUOTE         reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    SEMICOLON       reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    LPAREN          reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    RPAREN          reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    COMMA           reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    BAR             reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    GETS            reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    RBRACE          reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    OPTIONAL        reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)
    DEFAULT         reduce using rule 124 (oid_type -> OBJECT_IDENTIFIER .)



state 104

    (47) builtin_type -> null_type .

    END             reduce using rule 47 (builtin_type -> null_type .)
    UCASE_IDENT     reduce using rule 47 (builtin_type -> null_type .)
    LCASE_IDENT     reduce using rule 47 (builtin_type -> null_type .)
    PYQUOTE         reduce using rule 47 (builtin_type -> null_type .)
    SEMICOLON       reduce using rule 47 (builtin_type -> null_type .)
    LPAREN          reduce using rule 47 (builtin_type -> null_type .)
    RPAREN          reduce using rule 47 (builtin_type -> null_type .)
    COMMA           reduce using rule 47 (builtin_type -> null_type .)
    BAR             reduce using rule 47 (builtin_type -> null_type .)
    GETS            reduce using rule 47 (builtin_type -> null_type .)
    RBRACE          reduce using rule 47 (builtin_type -> null_type .)
    OPTIONAL        reduce using rule 47 (builtin_type -> null_type .)
    DEFAULT         reduce using rule 47 (builtin_type -> null_type .)



state 105

    (40) type -> sub_type .

    END             reduce using rule 40 (type -> sub_type .)
    UCASE_IDENT     reduce using rule 40 (type -> sub_type .)
    LCASE_IDENT     reduce using rule 40 (type -> sub_type .)
    PYQUOTE         reduce using rule 40 (type -> sub_type .)
    SEMICOLON       reduce using rule 40 (type -> sub_type .)
    LPAREN          reduce using rule 40 (type -> sub_type .)
    RPAREN          reduce using rule 40 (type -> sub_type .)
    COMMA           reduce using rule 40 (type -> sub_type .)
    BAR             reduce using rule 40 (type -> sub_type .)
    GETS            reduce using rule 40 (type -> sub_type .)
    RBRACE          reduce using rule 40 (type -> sub_type .)
    OPTIONAL        reduce using rule 40 (type -> sub_type .)
    DEFAULT         reduce using rule 40 (type -> sub_type .)



state 106

    (129) char_str_type -> STRING_T .

    END             reduce using rule 129 (char_str_type -> STRING_T .)
    UCASE_IDENT     reduce using rule 129 (char_str_type -> STRING_T .)
    LCASE_IDENT     reduce using rule 129 (char_str_type -> STRING_T .)
    PYQUOTE         reduce using rule 129 (char_str_type -> STRING_T .)
    SEMICOLON       reduce using rule 129 (char_str_type -> STRING_T .)
    LPAREN          reduce using rule 129 (char_str_type -> STRING_T .)
    RPAREN          reduce using rule 129 (char_str_type -> STRING_T .)
    COMMA           reduce using rule 129 (char_str_type -> STRING_T .)
    BAR             reduce using rule 129 (char_str_type -> STRING_T .)
    GETS            reduce using rule 129 (char_str_type -> STRING_T .)
    RBRACE          reduce using rule 129 (char_str_type -> STRING_T .)
    OPTIONAL        reduce using rule 129 (char_str_type -> STRING_T .)
    DEFAULT         reduce using rule 129 (char_str_type -> STRING_T .)



state 107

    (52) builtin_type -> choice_type .

    END             reduce using rule 52 (builtin_type -> choice_type .)
    UCASE_IDENT     reduce using rule 52 (builtin_type -> choice_type .)
    LCASE_IDENT     reduce using rule 52 (builtin_type -> choice_type .)
    PYQUOTE         reduce using rule 52 (builtin_type -> choice_type .)
    SEMICOLON       reduce using rule 52 (builtin_type -> choice_type .)
    LPAREN          reduce using rule 52 (builtin_type -> choice_type .)
    RPAREN          reduce using rule 52 (builtin_type -> choice_type .)
    COMMA           reduce using rule 52 (builtin_type -> choice_type .)
    BAR             reduce using rule 52 (builtin_type -> choice_type .)
    GETS            reduce using rule 52 (builtin_type -> choice_type .)
    RBRACE          reduce using rule 52 (builtin_type -> choice_type .)
    OPTIONAL        reduce using rule 52 (builtin_type -> choice_type .)
    DEFAULT         reduce using rule 52 (builtin_type -> choice_type .)



state 108

    (49) builtin_type -> sequenceof_type .

    END             reduce using rule 49 (builtin_type -> sequenceof_type .)
    UCASE_IDENT     reduce using rule 49 (builtin_type -> sequenceof_type .)
    LCASE_IDENT     reduce using rule 49 (builtin_type -> sequenceof_type .)
    PYQUOTE         reduce using rule 49 (builtin_type -> sequenceof_type .)
    SEMICOLON       reduce using rule 49 (builtin_type -> sequenceof_type .)
    LPAREN          reduce using rule 49 (builtin_type -> sequenceof_type .)
    RPAREN          reduce using rule 49 (builtin_type -> sequenceof_type .)
    COMMA           reduce using rule 49 (builtin_type -> sequenceof_type .)
    BAR             reduce using rule 49 (builtin_type -> sequenceof_type .)
    GETS            reduce using rule 49 (builtin_type -> sequenceof_type .)
    RBRACE          reduce using rule 49 (builtin_type -> sequenceof_type .)
    OPTIONAL        reduce using rule 49 (builtin_type -> sequenceof_type .)
    DEFAULT         reduce using rule 49 (builtin_type -> sequenceof_type .)



state 109

    (57) builtin_type -> enum_type .

    END             reduce using rule 57 (builtin_type -> enum_type .)
    UCASE_IDENT     reduce using rule 57 (builtin_type -> enum_type .)
    LCASE_IDENT     reduce using rule 57 (builtin_type -> enum_type .)
    PYQUOTE         reduce using rule 57 (builtin_type -> enum_type .)
    SEMICOLON       reduce using rule 57 (builtin_type -> enum_type .)
    LPAREN          reduce using rule 57 (builtin_type -> enum_type .)
    RPAREN          reduce using rule 57 (builtin_type -> enum_type .)
    COMMA           reduce using rule 57 (builtin_type -> enum_type .)
    BAR             reduce using rule 57 (builtin_type -> enum_type .)
    GETS            reduce using rule 57 (builtin_type -> enum_type .)
    RBRACE          reduce using rule 57 (builtin_type -> enum_type .)
    OPTIONAL        reduce using rule 57 (builtin_type -> enum_type .)
    DEFAULT         reduce using rule 57 (builtin_type -> enum_type .)



state 110

    (126) useful_type -> UTCTIME .

    END             reduce using rule 126 (useful_type -> UTCTIME .)
    UCASE_IDENT     reduce using rule 126 (useful_type -> UTCTIME .)
    LCASE_IDENT     reduce using rule 126 (useful_type -> UTCTIME .)
    PYQUOTE         reduce using rule 126 (useful_type -> UTCTIME .)
    SEMICOLON       reduce using rule 126 (useful_type -> UTCTIME .)
    LPAREN          reduce using rule 126 (useful_type -> UTCTIME .)
    RPAREN          reduce using rule 126 (useful_type -> UTCTIME .)
    COMMA           reduce using rule 126 (useful_type -> UTCTIME .)
    BAR             reduce using rule 126 (useful_type -> UTCTIME .)
    GETS            reduce using rule 126 (useful_type -> UTCTIME .)
    RBRACE          reduce using rule 126 (useful_type -> UTCTIME .)
    OPTIONAL        reduce using rule 126 (useful_type -> UTCTIME .)
    DEFAULT         reduce using rule 126 (useful_type -> UTCTIME .)



state 111

    (64) boolean_type -> BOOLEAN .

    END             reduce using rule 64 (boolean_type -> BOOLEAN .)
    UCASE_IDENT     reduce using rule 64 (boolean_type -> BOOLEAN .)
    LCASE_IDENT     reduce using rule 64 (boolean_type -> BOOLEAN .)
    PYQUOTE         reduce using rule 64 (boolean_type -> BOOLEAN .)
    SEMICOLON       reduce using rule 64 (boolean_type -> BOOLEAN .)
    LPAREN          reduce using rule 64 (boolean_type -> BOOLEAN .)
    RPAREN          reduce using rule 64 (boolean_type -> BOOLEAN .)
    COMMA           reduce using rule 64 (boolean_type -> BOOLEAN .)
    BAR             reduce using rule 64 (boolean_type -> BOOLEAN .)
    GETS            reduce using rule 64 (boolean_type -> BOOLEAN .)
    RBRACE          reduce using rule 64 (boolean_type -> BOOLEAN .)
    OPTIONAL        reduce using rule 64 (boolean_type -> BOOLEAN .)
    DEFAULT         reduce using rule 64 (boolean_type -> BOOLEAN .)



state 112

    (73) enum_type -> ENUMERATED . LBRACE named_number_list RBRACE
    (74) enum_type -> ENUMERATED . LBRACE named_number_list COMMA ELLIPSIS RBRACE

    LBRACE          shift and go to state 146

  ! LBRACE          [ shift and go to state 146 ]


state 113

    (111) selection_type -> identifier . LT type

    LT              shift and go to state 147



state 114

    (122) any_type -> ANY .
    (123) any_type -> ANY . DEFINED BY identifier

    END             reduce using rule 122 (any_type -> ANY .)
    UCASE_IDENT     reduce using rule 122 (any_type -> ANY .)
    LCASE_IDENT     reduce using rule 122 (any_type -> ANY .)
    PYQUOTE         reduce using rule 122 (any_type -> ANY .)
    SEMICOLON       reduce using rule 122 (any_type -> ANY .)
    LPAREN          reduce using rule 122 (any_type -> ANY .)
    RPAREN          reduce using rule 122 (any_type -> ANY .)
    COMMA           reduce using rule 122 (any_type -> ANY .)
    BAR             reduce using rule 122 (any_type -> ANY .)
    GETS            reduce using rule 122 (any_type -> ANY .)
    RBRACE          reduce using rule 122 (any_type -> ANY .)
    OPTIONAL        reduce using rule 122 (any_type -> ANY .)
    DEFAULT         reduce using rule 122 (any_type -> ANY .)
    DEFINED         shift and go to state 148



state 115

    (44) builtin_type -> boolean_type .

    END             reduce using rule 44 (builtin_type -> boolean_type .)
    UCASE_IDENT     reduce using rule 44 (builtin_type -> boolean_type .)
    LCASE_IDENT     reduce using rule 44 (builtin_type -> boolean_type .)
    PYQUOTE         reduce using rule 44 (builtin_type -> boolean_type .)
    SEMICOLON       reduce using rule 44 (builtin_type -> boolean_type .)
    LPAREN          reduce using rule 44 (builtin_type -> boolean_type .)
    RPAREN          reduce using rule 44 (builtin_type -> boolean_type .)
    COMMA           reduce using rule 44 (builtin_type -> boolean_type .)
    BAR             reduce using rule 44 (builtin_type -> boolean_type .)
    GETS            reduce using rule 44 (builtin_type -> boolean_type .)
    RBRACE          reduce using rule 44 (builtin_type -> boolean_type .)
    OPTIONAL        reduce using rule 44 (builtin_type -> boolean_type .)
    DEFAULT         reduce using rule 44 (builtin_type -> boolean_type .)



state 116

    (55) builtin_type -> any_type .

    END             reduce using rule 55 (builtin_type -> any_type .)
    UCASE_IDENT     reduce using rule 55 (builtin_type -> any_type .)
    LCASE_IDENT     reduce using rule 55 (builtin_type -> any_type .)
    PYQUOTE         reduce using rule 55 (builtin_type -> any_type .)
    SEMICOLON       reduce using rule 55 (builtin_type -> any_type .)
    LPAREN          reduce using rule 55 (builtin_type -> any_type .)
    RPAREN          reduce using rule 55 (builtin_type -> any_type .)
    COMMA           reduce using rule 55 (builtin_type -> any_type .)
    BAR             reduce using rule 55 (builtin_type -> any_type .)
    GETS            reduce using rule 55 (builtin_type -> any_type .)
    RBRACE          reduce using rule 55 (builtin_type -> any_type .)
    OPTIONAL        reduce using rule 55 (builtin_type -> any_type .)
    DEFAULT         reduce using rule 55 (builtin_type -> any_type .)



state 117

    (37) type_assign -> type_ref GETS . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    type_ref        shift and go to state 76
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 149
    boolean_type    shift and go to state 115
    any_type        shift and go to state 116

state 118

    (30) assign_list -> assign_list assign .

    END             reduce using rule 30 (assign_list -> assign_list assign .)
    UCASE_IDENT     reduce using rule 30 (assign_list -> assign_list assign .)
    LCASE_IDENT     reduce using rule 30 (assign_list -> assign_list assign .)
    PYQUOTE         reduce using rule 30 (assign_list -> assign_list assign .)



state 119

    (31) assign_list -> assign SEMICOLON .

    END             reduce using rule 31 (assign_list -> assign SEMICOLON .)
    UCASE_IDENT     reduce using rule 31 (assign_list -> assign SEMICOLON .)
    LCASE_IDENT     reduce using rule 31 (assign_list -> assign SEMICOLON .)
    PYQUOTE         reduce using rule 31 (assign_list -> assign SEMICOLON .)



state 120

    (18) exp_sym_list -> exp_sym_list COMMA symbol .

    SEMICOLON       reduce using rule 18 (exp_sym_list -> exp_sym_list COMMA symbol .)
    COMMA           reduce using rule 18 (exp_sym_list -> exp_sym_list COMMA symbol .)



state 121

    (25) syms_from_module -> symbol_list FROM module_ident .

    SEMICOLON       reduce using rule 25 (syms_from_module -> symbol_list FROM module_ident .)
    UCASE_IDENT     reduce using rule 25 (syms_from_module -> symbol_list FROM module_ident .)
    LCASE_IDENT     reduce using rule 25 (syms_from_module -> symbol_list FROM module_ident .)



state 122

    (26) symbol_list -> symbol_list COMMA symbol .

    FROM            reduce using rule 26 (symbol_list -> symbol_list COMMA symbol .)
    COMMA           reduce using rule 26 (symbol_list -> symbol_list COMMA symbol .)



state 123

    (101) choice_type -> CHOICE LBRACE . alternative_type_lists RBRACE
    (102) alternative_type_lists -> . alternative_type_list
    (103) alternative_type_lists -> . alternative_type_list COMMA extension_and_exception extension_addition_alternatives optional_extension_marker
    (109) alternative_type_list -> . named_type
    (110) alternative_type_list -> . alternative_type_list COMMA named_type
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 150
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    alternative_type_lists shift and go to state 153
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    alternative_type_list shift and go to state 151
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    useful_type     shift and go to state 82

state 124

    (41) ext_type_ref -> type_ref DOT . type_ref
    (211) type_ref -> . UCASE_IDENT

    UCASE_IDENT     shift and go to state 4


    type_ref        shift and go to state 155

state 125

    (119) class -> APPLICATION .

    NUMBER          reduce using rule 119 (class -> APPLICATION .)
    UCASE_IDENT     reduce using rule 119 (class -> APPLICATION .)
    LCASE_IDENT     reduce using rule 119 (class -> APPLICATION .)



state 126

    (118) class -> UNIVERSAL .

    NUMBER          reduce using rule 118 (class -> UNIVERSAL .)
    UCASE_IDENT     reduce using rule 118 (class -> UNIVERSAL .)
    LCASE_IDENT     reduce using rule 118 (class -> UNIVERSAL .)



state 127

    (120) class -> PRIVATE .

    NUMBER          reduce using rule 120 (class -> PRIVATE .)
    UCASE_IDENT     reduce using rule 120 (class -> PRIVATE .)
    LCASE_IDENT     reduce using rule 120 (class -> PRIVATE .)



state 128

    (115) tag -> LBRACK class . class_number RBRACK
    (116) class_number -> . number
    (117) class_number -> . defined_value
    (210) number -> . NUMBER
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    NUMBER          shift and go to state 157
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 156
    ext_val_ref     shift and go to state 37
    identifier      shift and go to state 38
    class_number    shift and go to state 159
    type_ref        shift and go to state 35
    number          shift and go to state 158

state 129

    (114) tagged_type -> tag EXPLICIT . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 160
    boolean_type    shift and go to state 115

state 130

    (113) tagged_type -> tag IMPLICIT . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 161
    boolean_type    shift and go to state 115

state 131

    (112) tagged_type -> tag type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 112 (tagged_type -> tag type .)
    UCASE_IDENT     reduce using rule 112 (tagged_type -> tag type .)
    LCASE_IDENT     reduce using rule 112 (tagged_type -> tag type .)
    PYQUOTE         reduce using rule 112 (tagged_type -> tag type .)
    SEMICOLON       reduce using rule 112 (tagged_type -> tag type .)
    RPAREN          reduce using rule 112 (tagged_type -> tag type .)
    COMMA           reduce using rule 112 (tagged_type -> tag type .)
    BAR             reduce using rule 112 (tagged_type -> tag type .)
    GETS            reduce using rule 112 (tagged_type -> tag type .)
    RBRACE          reduce using rule 112 (tagged_type -> tag type .)
    OPTIONAL        reduce using rule 112 (tagged_type -> tag type .)
    DEFAULT         reduce using rule 112 (tagged_type -> tag type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 112 (tagged_type -> tag type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 132

    (99) set_type -> SET LBRACE . element_type_list RBRACE
    (93) element_type_list -> . element_type
    (94) element_type_list -> . element_type_list COMMA element_type
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    element_type_list shift and go to state 163
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    real_type       shift and go to state 79
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    element_type    shift and go to state 164
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    choice_type     shift and go to state 107

state 133

    (100) setof_type -> SET OF . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 165
    boolean_type    shift and go to state 115

state 134

    (131) sub_type -> SET size_constraint . OF type

    OF              shift and go to state 166



state 135

    (155) size_constraint -> SIZE . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 167

state 136

    (80) sequence_type -> SEQUENCE LBRACE . component_type_lists RBRACE
    (81) sequence_type -> SEQUENCE LBRACE . RBRACE
    (85) component_type_lists -> . element_type_list
    (86) component_type_lists -> . element_type_list COMMA extension_and_exception extension_additions optional_extension_marker
    (87) component_type_lists -> . extension_and_exception extension_additions optional_extension_marker
    (93) element_type_list -> . element_type
    (94) element_type_list -> . element_type_list COMMA element_type
    (82) extension_and_exception -> . ELLIPSIS
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    RBRACE          shift and go to state 171
    ELLIPSIS        shift and go to state 170
    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    selection_type  shift and go to state 97
    component_type_lists shift and go to state 172
    boolean_type    shift and go to state 115
    extension_and_exception shift and go to state 168
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    defined_type    shift and go to state 89
    oid_type        shift and go to state 81
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    ext_type_ref    shift and go to state 96
    element_type_list shift and go to state 169
    sequenceof_type shift and go to state 108
    choice_type     shift and go to state 107
    sequence_type   shift and go to state 90
    element_type    shift and go to state 164
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    useful_type     shift and go to state 82
    any_type        shift and go to state 116

state 137

    (98) sequenceof_type -> SEQUENCE OF . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 173
    boolean_type    shift and go to state 115

state 138

    (132) sub_type -> SEQUENCE size_constraint . OF type

    OF              shift and go to state 174



state 139

    (133) sub_type -> SEQUENCE LPAREN . size_constraint RPAREN OF type
    (155) size_constraint -> . SIZE subtype_spec

    SIZE            shift and go to state 135


    size_constraint shift and go to state 175

state 140

    (66) integer_type -> INTEGER LBRACE . named_number_list RBRACE
    (67) named_number_list -> . named_number_list COMMA named_number
    (68) named_number_list -> . named_number
    (69) named_number -> . identifier LPAREN signed_number RPAREN
    (70) named_number -> . identifier LPAREN defined_value RPAREN
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 177
    named_number_list shift and go to state 178
    named_number    shift and go to state 176

state 141

    (76) bitstring_type -> BIT STRING .
    (77) bitstring_type -> BIT STRING . LBRACE named_bit_list RBRACE

    END             reduce using rule 76 (bitstring_type -> BIT STRING .)
    UCASE_IDENT     reduce using rule 76 (bitstring_type -> BIT STRING .)
    LCASE_IDENT     reduce using rule 76 (bitstring_type -> BIT STRING .)
    PYQUOTE         reduce using rule 76 (bitstring_type -> BIT STRING .)
    SEMICOLON       reduce using rule 76 (bitstring_type -> BIT STRING .)
    LPAREN          reduce using rule 76 (bitstring_type -> BIT STRING .)
    RPAREN          reduce using rule 76 (bitstring_type -> BIT STRING .)
    COMMA           reduce using rule 76 (bitstring_type -> BIT STRING .)
    BAR             reduce using rule 76 (bitstring_type -> BIT STRING .)
    GETS            reduce using rule 76 (bitstring_type -> BIT STRING .)
    RBRACE          reduce using rule 76 (bitstring_type -> BIT STRING .)
    OPTIONAL        reduce using rule 76 (bitstring_type -> BIT STRING .)
    DEFAULT         reduce using rule 76 (bitstring_type -> BIT STRING .)
    LBRACE          shift and go to state 179



state 142

    (175) value_assign -> identifier type GETS . value
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 180
    special_real_val shift and go to state 193
    builtin_value   shift and go to state 194
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    value           shift and go to state 197
    ext_val_ref     shift and go to state 37
    boolean_val     shift and go to state 186
    type_ref        shift and go to state 35
    null_val        shift and go to state 199
    identifier      shift and go to state 38

state 143

    (134) subtype_spec -> LPAREN . subtype_val_set_list RPAREN
    (135) subtype_spec -> LPAREN . subtype_val_set_list COMMA ELLIPSIS RPAREN
    (136) subtype_val_set_list -> . subtype_val_set
    (137) subtype_val_set_list -> . subtype_val_set_list BAR subtype_val_set
    (138) subtype_val_set -> . single_value
    (139) subtype_val_set -> . contained_subtype
    (140) subtype_val_set -> . value_range
    (141) subtype_val_set -> . permitted_alphabet
    (142) subtype_val_set -> . size_constraint
    (143) subtype_val_set -> . inner_type_constraints
    (144) single_value -> . value
    (145) contained_subtype -> . INCLUDES type
    (146) value_range -> . lower_end_point RANGE upper_end_point
    (156) permitted_alphabet -> . FROM subtype_spec
    (155) size_constraint -> . SIZE subtype_spec
    (157) inner_type_constraints -> . WITH COMPONENT single_type_constraint
    (158) inner_type_constraints -> . WITH COMPONENTS multiple_type_constraints
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (147) lower_end_point -> . lower_end_value
    (148) lower_end_point -> . lower_end_value LT
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (151) lower_end_value -> . value
    (152) lower_end_value -> . MIN
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    INCLUDES        shift and go to state 209
    FROM            shift and go to state 212
    SIZE            shift and go to state 135
    WITH            shift and go to state 204
    MIN             shift and go to state 207
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4

  ! WITH            [ shift and go to state 204 ]

    defined_value   shift and go to state 180
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    size_constraint shift and go to state 201
    type_ref        shift and go to state 35
    inner_type_constraints shift and go to state 210
    contained_subtype shift and go to state 202
    boolean_val     shift and go to state 186
    subtype_val_set_list shift and go to state 200
    lower_end_point shift and go to state 203
    special_real_val shift and go to state 193
    single_value    shift and go to state 205
    permitted_alphabet shift and go to state 211
    ext_val_ref     shift and go to state 37
    subtype_val_set shift and go to state 206
    builtin_value   shift and go to state 194
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    value           shift and go to state 213
    value_range     shift and go to state 208
    null_val        shift and go to state 199
    lower_end_value shift and go to state 214
    identifier      shift and go to state 38

state 144

    (130) sub_type -> type subtype_spec .

    END             reduce using rule 130 (sub_type -> type subtype_spec .)
    UCASE_IDENT     reduce using rule 130 (sub_type -> type subtype_spec .)
    LCASE_IDENT     reduce using rule 130 (sub_type -> type subtype_spec .)
    PYQUOTE         reduce using rule 130 (sub_type -> type subtype_spec .)
    SEMICOLON       reduce using rule 130 (sub_type -> type subtype_spec .)
    LPAREN          reduce using rule 130 (sub_type -> type subtype_spec .)
    RPAREN          reduce using rule 130 (sub_type -> type subtype_spec .)
    COMMA           reduce using rule 130 (sub_type -> type subtype_spec .)
    BAR             reduce using rule 130 (sub_type -> type subtype_spec .)
    GETS            reduce using rule 130 (sub_type -> type subtype_spec .)
    RBRACE          reduce using rule 130 (sub_type -> type subtype_spec .)
    OPTIONAL        reduce using rule 130 (sub_type -> type subtype_spec .)
    DEFAULT         reduce using rule 130 (sub_type -> type subtype_spec .)



state 145

    (61) builtin_type -> OCTET STRING .

    END             reduce using rule 61 (builtin_type -> OCTET STRING .)
    UCASE_IDENT     reduce using rule 61 (builtin_type -> OCTET STRING .)
    LCASE_IDENT     reduce using rule 61 (builtin_type -> OCTET STRING .)
    PYQUOTE         reduce using rule 61 (builtin_type -> OCTET STRING .)
    SEMICOLON       reduce using rule 61 (builtin_type -> OCTET STRING .)
    LPAREN          reduce using rule 61 (builtin_type -> OCTET STRING .)
    RPAREN          reduce using rule 61 (builtin_type -> OCTET STRING .)
    COMMA           reduce using rule 61 (builtin_type -> OCTET STRING .)
    BAR             reduce using rule 61 (builtin_type -> OCTET STRING .)
    GETS            reduce using rule 61 (builtin_type -> OCTET STRING .)
    RBRACE          reduce using rule 61 (builtin_type -> OCTET STRING .)
    OPTIONAL        reduce using rule 61 (builtin_type -> OCTET STRING .)
    DEFAULT         reduce using rule 61 (builtin_type -> OCTET STRING .)



state 146

    (73) enum_type -> ENUMERATED LBRACE . named_number_list RBRACE
    (74) enum_type -> ENUMERATED LBRACE . named_number_list COMMA ELLIPSIS RBRACE
    (67) named_number_list -> . named_number_list COMMA named_number
    (68) named_number_list -> . named_number
    (69) named_number -> . identifier LPAREN signed_number RPAREN
    (70) named_number -> . identifier LPAREN defined_value RPAREN
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 177
    named_number_list shift and go to state 215
    named_number    shift and go to state 176

state 147

    (111) selection_type -> identifier LT . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 216

state 148

    (123) any_type -> ANY DEFINED . BY identifier

    BY              shift and go to state 217



state 149

    (37) type_assign -> type_ref GETS type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    END             reduce using rule 37 (type_assign -> type_ref GETS type .)
    UCASE_IDENT     reduce using rule 37 (type_assign -> type_ref GETS type .)
    LCASE_IDENT     reduce using rule 37 (type_assign -> type_ref GETS type .)
    PYQUOTE         reduce using rule 37 (type_assign -> type_ref GETS type .)
    SEMICOLON       reduce using rule 37 (type_assign -> type_ref GETS type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 150

    (109) alternative_type_list -> named_type .

    RBRACE          reduce using rule 109 (alternative_type_list -> named_type .)
    COMMA           reduce using rule 109 (alternative_type_list -> named_type .)



state 151

    (102) alternative_type_lists -> alternative_type_list .
    (103) alternative_type_lists -> alternative_type_list . COMMA extension_and_exception extension_addition_alternatives optional_extension_marker
    (110) alternative_type_list -> alternative_type_list . COMMA named_type

    RBRACE          reduce using rule 102 (alternative_type_lists -> alternative_type_list .)
    COMMA           shift and go to state 218

  ! COMMA           [ shift and go to state 218 ]


state 152

    (63) named_type -> type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    COMMA           reduce using rule 63 (named_type -> type .)
    RBRACE          reduce using rule 63 (named_type -> type .)
    OPTIONAL        reduce using rule 63 (named_type -> type .)
    DEFAULT         reduce using rule 63 (named_type -> type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 153

    (101) choice_type -> CHOICE LBRACE alternative_type_lists . RBRACE

    RBRACE          shift and go to state 219



state 154

    (62) named_type -> identifier . type
    (111) selection_type -> identifier . LT type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LT              shift and go to state 147
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 220

state 155

    (41) ext_type_ref -> type_ref DOT type_ref .

    END             reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    UCASE_IDENT     reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    LCASE_IDENT     reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    PYQUOTE         reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    SEMICOLON       reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    LPAREN          reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    RPAREN          reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    COMMA           reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    BAR             reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    GETS            reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    RBRACE          reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    OPTIONAL        reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)
    DEFAULT         reduce using rule 41 (ext_type_ref -> type_ref DOT type_ref .)



state 156

    (117) class_number -> defined_value .

    RBRACK          reduce using rule 117 (class_number -> defined_value .)



state 157

    (210) number -> NUMBER .

    RBRACK          reduce using rule 210 (number -> NUMBER .)



state 158

    (116) class_number -> number .

    RBRACK          reduce using rule 116 (class_number -> number .)



state 159

    (115) tag -> LBRACK class class_number . RBRACK

    RBRACK          shift and go to state 221



state 160

    (114) tagged_type -> tag EXPLICIT type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    UCASE_IDENT     reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    LCASE_IDENT     reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    PYQUOTE         reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    SEMICOLON       reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    RPAREN          reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    COMMA           reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    BAR             reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    GETS            reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    RBRACE          reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    OPTIONAL        reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    DEFAULT         reduce using rule 114 (tagged_type -> tag EXPLICIT type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 114 (tagged_type -> tag EXPLICIT type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 161

    (113) tagged_type -> tag IMPLICIT type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    UCASE_IDENT     reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    LCASE_IDENT     reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    PYQUOTE         reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    SEMICOLON       reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    RPAREN          reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    COMMA           reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    BAR             reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    GETS            reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    RBRACE          reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    OPTIONAL        reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    DEFAULT         reduce using rule 113 (tagged_type -> tag IMPLICIT type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 113 (tagged_type -> tag IMPLICIT type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 162

    (95) element_type -> named_type .
    (96) element_type -> named_type . OPTIONAL
    (97) element_type -> named_type . DEFAULT named_value

    COMMA           reduce using rule 95 (element_type -> named_type .)
    RBRACE          reduce using rule 95 (element_type -> named_type .)
    OPTIONAL        shift and go to state 223
    DEFAULT         shift and go to state 222



state 163

    (99) set_type -> SET LBRACE element_type_list . RBRACE
    (94) element_type_list -> element_type_list . COMMA element_type

    RBRACE          shift and go to state 225
    COMMA           shift and go to state 224



state 164

    (93) element_type_list -> element_type .

    RBRACE          reduce using rule 93 (element_type_list -> element_type .)
    COMMA           reduce using rule 93 (element_type_list -> element_type .)



state 165

    (100) setof_type -> SET OF type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 100 (setof_type -> SET OF type .)
    UCASE_IDENT     reduce using rule 100 (setof_type -> SET OF type .)
    LCASE_IDENT     reduce using rule 100 (setof_type -> SET OF type .)
    PYQUOTE         reduce using rule 100 (setof_type -> SET OF type .)
    SEMICOLON       reduce using rule 100 (setof_type -> SET OF type .)
    RPAREN          reduce using rule 100 (setof_type -> SET OF type .)
    COMMA           reduce using rule 100 (setof_type -> SET OF type .)
    BAR             reduce using rule 100 (setof_type -> SET OF type .)
    GETS            reduce using rule 100 (setof_type -> SET OF type .)
    RBRACE          reduce using rule 100 (setof_type -> SET OF type .)
    OPTIONAL        reduce using rule 100 (setof_type -> SET OF type .)
    DEFAULT         reduce using rule 100 (setof_type -> SET OF type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 100 (setof_type -> SET OF type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 166

    (131) sub_type -> SET size_constraint OF . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 226
    boolean_type    shift and go to state 115

state 167

    (155) size_constraint -> SIZE subtype_spec .

    OF              reduce using rule 155 (size_constraint -> SIZE subtype_spec .)
    RPAREN          reduce using rule 155 (size_constraint -> SIZE subtype_spec .)
    COMMA           reduce using rule 155 (size_constraint -> SIZE subtype_spec .)
    BAR             reduce using rule 155 (size_constraint -> SIZE subtype_spec .)



state 168

    (87) component_type_lists -> extension_and_exception . extension_additions optional_extension_marker
    (88) extension_additions -> . extension_addition_list
    (89) extension_additions -> .
    (90) extension_addition_list -> . COMMA extension_addition
    (91) extension_addition_list -> . extension_addition_list COMMA extension_addition

  ! shift/reduce conflict for COMMA resolved as shift.
    RBRACE          reduce using rule 89 (extension_additions -> .)
    COMMA           shift and go to state 227

  ! COMMA           [ reduce using rule 89 (extension_additions -> .) ]

    extension_addition_list shift and go to state 229
    extension_additions shift and go to state 228

state 169

    (85) component_type_lists -> element_type_list .
    (86) component_type_lists -> element_type_list . COMMA extension_and_exception extension_additions optional_extension_marker
    (94) element_type_list -> element_type_list . COMMA element_type

    RBRACE          reduce using rule 85 (component_type_lists -> element_type_list .)
    COMMA           shift and go to state 230

  ! COMMA           [ shift and go to state 230 ]


state 170

    (82) extension_and_exception -> ELLIPSIS .

    COMMA           reduce using rule 82 (extension_and_exception -> ELLIPSIS .)
    RBRACE          reduce using rule 82 (extension_and_exception -> ELLIPSIS .)



state 171

    (81) sequence_type -> SEQUENCE LBRACE RBRACE .

    END             reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    UCASE_IDENT     reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    LCASE_IDENT     reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    PYQUOTE         reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    SEMICOLON       reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    LPAREN          reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    RPAREN          reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    COMMA           reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    BAR             reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    GETS            reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    RBRACE          reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    OPTIONAL        reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)
    DEFAULT         reduce using rule 81 (sequence_type -> SEQUENCE LBRACE RBRACE .)



state 172

    (80) sequence_type -> SEQUENCE LBRACE component_type_lists . RBRACE

    RBRACE          shift and go to state 231



state 173

    (98) sequenceof_type -> SEQUENCE OF type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    UCASE_IDENT     reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    LCASE_IDENT     reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    PYQUOTE         reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    SEMICOLON       reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    RPAREN          reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    COMMA           reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    BAR             reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    GETS            reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    RBRACE          reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    OPTIONAL        reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    DEFAULT         reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 98 (sequenceof_type -> SEQUENCE OF type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 174

    (132) sub_type -> SEQUENCE size_constraint OF . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 232
    boolean_type    shift and go to state 115

state 175

    (133) sub_type -> SEQUENCE LPAREN size_constraint . RPAREN OF type

    RPAREN          shift and go to state 233



state 176

    (68) named_number_list -> named_number .

    RBRACE          reduce using rule 68 (named_number_list -> named_number .)
    COMMA           reduce using rule 68 (named_number_list -> named_number .)



state 177

    (69) named_number -> identifier . LPAREN signed_number RPAREN
    (70) named_number -> identifier . LPAREN defined_value RPAREN

    LPAREN          shift and go to state 234

  ! LPAREN          [ shift and go to state 234 ]


state 178

    (66) integer_type -> INTEGER LBRACE named_number_list . RBRACE
    (67) named_number_list -> named_number_list . COMMA named_number

    RBRACE          shift and go to state 236
    COMMA           shift and go to state 235



state 179

    (77) bitstring_type -> BIT STRING LBRACE . named_bit_list RBRACE
    (78) named_bit_list -> . named_number_list
    (67) named_number_list -> . named_number_list COMMA named_number
    (68) named_number_list -> . named_number
    (69) named_number -> . identifier LPAREN signed_number RPAREN
    (70) named_number -> . identifier LPAREN defined_value RPAREN
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    named_bit_list  shift and go to state 237
    named_number    shift and go to state 176
    identifier      shift and go to state 177
    named_number_list shift and go to state 238

state 180

    (177) value -> defined_value .

    RPAREN          reduce using rule 177 (value -> defined_value .)
    COMMA           reduce using rule 177 (value -> defined_value .)
    BAR             reduce using rule 177 (value -> defined_value .)
    RANGE           reduce using rule 177 (value -> defined_value .)
    LT              reduce using rule 177 (value -> defined_value .)
    END             reduce using rule 177 (value -> defined_value .)
    UCASE_IDENT     reduce using rule 177 (value -> defined_value .)
    LCASE_IDENT     reduce using rule 177 (value -> defined_value .)
    PYQUOTE         reduce using rule 177 (value -> defined_value .)
    SEMICOLON       reduce using rule 177 (value -> defined_value .)
    RBRACE          reduce using rule 177 (value -> defined_value .)



state 181

    (185) builtin_value -> hex_string .

    RPAREN          reduce using rule 185 (builtin_value -> hex_string .)
    COMMA           reduce using rule 185 (builtin_value -> hex_string .)
    BAR             reduce using rule 185 (builtin_value -> hex_string .)
    RANGE           reduce using rule 185 (builtin_value -> hex_string .)
    LT              reduce using rule 185 (builtin_value -> hex_string .)
    END             reduce using rule 185 (builtin_value -> hex_string .)
    UCASE_IDENT     reduce using rule 185 (builtin_value -> hex_string .)
    LCASE_IDENT     reduce using rule 185 (builtin_value -> hex_string .)
    PYQUOTE         reduce using rule 185 (builtin_value -> hex_string .)
    SEMICOLON       reduce using rule 185 (builtin_value -> hex_string .)
    RBRACE          reduce using rule 185 (builtin_value -> hex_string .)



state 182

    (186) builtin_value -> binary_string .

    RPAREN          reduce using rule 186 (builtin_value -> binary_string .)
    COMMA           reduce using rule 186 (builtin_value -> binary_string .)
    BAR             reduce using rule 186 (builtin_value -> binary_string .)
    RANGE           reduce using rule 186 (builtin_value -> binary_string .)
    LT              reduce using rule 186 (builtin_value -> binary_string .)
    END             reduce using rule 186 (builtin_value -> binary_string .)
    UCASE_IDENT     reduce using rule 186 (builtin_value -> binary_string .)
    LCASE_IDENT     reduce using rule 186 (builtin_value -> binary_string .)
    PYQUOTE         reduce using rule 186 (builtin_value -> binary_string .)
    SEMICOLON       reduce using rule 186 (builtin_value -> binary_string .)
    RBRACE          reduce using rule 186 (builtin_value -> binary_string .)



state 183

    (208) hex_string -> HSTRING .

    RPAREN          reduce using rule 208 (hex_string -> HSTRING .)
    COMMA           reduce using rule 208 (hex_string -> HSTRING .)
    BAR             reduce using rule 208 (hex_string -> HSTRING .)
    RANGE           reduce using rule 208 (hex_string -> HSTRING .)
    LT              reduce using rule 208 (hex_string -> HSTRING .)
    END             reduce using rule 208 (hex_string -> HSTRING .)
    UCASE_IDENT     reduce using rule 208 (hex_string -> HSTRING .)
    LCASE_IDENT     reduce using rule 208 (hex_string -> HSTRING .)
    PYQUOTE         reduce using rule 208 (hex_string -> HSTRING .)
    SEMICOLON       reduce using rule 208 (hex_string -> HSTRING .)
    RBRACE          reduce using rule 208 (hex_string -> HSTRING .)



state 184

    (71) signed_number -> NUMBER .

    RPAREN          reduce using rule 71 (signed_number -> NUMBER .)
    COMMA           reduce using rule 71 (signed_number -> NUMBER .)
    BAR             reduce using rule 71 (signed_number -> NUMBER .)
    RANGE           reduce using rule 71 (signed_number -> NUMBER .)
    LT              reduce using rule 71 (signed_number -> NUMBER .)
    END             reduce using rule 71 (signed_number -> NUMBER .)
    UCASE_IDENT     reduce using rule 71 (signed_number -> NUMBER .)
    LCASE_IDENT     reduce using rule 71 (signed_number -> NUMBER .)
    PYQUOTE         reduce using rule 71 (signed_number -> NUMBER .)
    SEMICOLON       reduce using rule 71 (signed_number -> NUMBER .)
    RBRACE          reduce using rule 71 (signed_number -> NUMBER .)



state 185

    (191) special_real_val -> MINUS_INFINITY .

    RPAREN          reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    COMMA           reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    BAR             reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    RANGE           reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    LT              reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    END             reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    UCASE_IDENT     reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    LCASE_IDENT     reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    PYQUOTE         reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    SEMICOLON       reduce using rule 191 (special_real_val -> MINUS_INFINITY .)
    RBRACE          reduce using rule 191 (special_real_val -> MINUS_INFINITY .)



state 186

    (181) builtin_value -> boolean_val .

    RPAREN          reduce using rule 181 (builtin_value -> boolean_val .)
    COMMA           reduce using rule 181 (builtin_value -> boolean_val .)
    BAR             reduce using rule 181 (builtin_value -> boolean_val .)
    RANGE           reduce using rule 181 (builtin_value -> boolean_val .)
    LT              reduce using rule 181 (builtin_value -> boolean_val .)
    END             reduce using rule 181 (builtin_value -> boolean_val .)
    UCASE_IDENT     reduce using rule 181 (builtin_value -> boolean_val .)
    LCASE_IDENT     reduce using rule 181 (builtin_value -> boolean_val .)
    PYQUOTE         reduce using rule 181 (builtin_value -> boolean_val .)
    SEMICOLON       reduce using rule 181 (builtin_value -> boolean_val .)
    RBRACE          reduce using rule 181 (builtin_value -> boolean_val .)



state 187

    (190) special_real_val -> PLUS_INFINITY .

    RPAREN          reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    COMMA           reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    BAR             reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    RANGE           reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    LT              reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    END             reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    UCASE_IDENT     reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    LCASE_IDENT     reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    PYQUOTE         reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    SEMICOLON       reduce using rule 190 (special_real_val -> PLUS_INFINITY .)
    RBRACE          reduce using rule 190 (special_real_val -> PLUS_INFINITY .)



state 188

    (189) boolean_val -> FALSE .

    RPAREN          reduce using rule 189 (boolean_val -> FALSE .)
    COMMA           reduce using rule 189 (boolean_val -> FALSE .)
    BAR             reduce using rule 189 (boolean_val -> FALSE .)
    RANGE           reduce using rule 189 (boolean_val -> FALSE .)
    LT              reduce using rule 189 (boolean_val -> FALSE .)
    END             reduce using rule 189 (boolean_val -> FALSE .)
    UCASE_IDENT     reduce using rule 189 (boolean_val -> FALSE .)
    LCASE_IDENT     reduce using rule 189 (boolean_val -> FALSE .)
    PYQUOTE         reduce using rule 189 (boolean_val -> FALSE .)
    SEMICOLON       reduce using rule 189 (boolean_val -> FALSE .)
    RBRACE          reduce using rule 189 (boolean_val -> FALSE .)



state 189

    (207) binary_string -> BSTRING .

    RPAREN          reduce using rule 207 (binary_string -> BSTRING .)
    COMMA           reduce using rule 207 (binary_string -> BSTRING .)
    BAR             reduce using rule 207 (binary_string -> BSTRING .)
    RANGE           reduce using rule 207 (binary_string -> BSTRING .)
    LT              reduce using rule 207 (binary_string -> BSTRING .)
    END             reduce using rule 207 (binary_string -> BSTRING .)
    UCASE_IDENT     reduce using rule 207 (binary_string -> BSTRING .)
    LCASE_IDENT     reduce using rule 207 (binary_string -> BSTRING .)
    PYQUOTE         reduce using rule 207 (binary_string -> BSTRING .)
    SEMICOLON       reduce using rule 207 (binary_string -> BSTRING .)
    RBRACE          reduce using rule 207 (binary_string -> BSTRING .)



state 190

    (192) null_val -> NULL .

    RPAREN          reduce using rule 192 (null_val -> NULL .)
    COMMA           reduce using rule 192 (null_val -> NULL .)
    BAR             reduce using rule 192 (null_val -> NULL .)
    RANGE           reduce using rule 192 (null_val -> NULL .)
    LT              reduce using rule 192 (null_val -> NULL .)
    END             reduce using rule 192 (null_val -> NULL .)
    UCASE_IDENT     reduce using rule 192 (null_val -> NULL .)
    LCASE_IDENT     reduce using rule 192 (null_val -> NULL .)
    PYQUOTE         reduce using rule 192 (null_val -> NULL .)
    SEMICOLON       reduce using rule 192 (null_val -> NULL .)
    RBRACE          reduce using rule 192 (null_val -> NULL .)



state 191

    (188) boolean_val -> TRUE .

    RPAREN          reduce using rule 188 (boolean_val -> TRUE .)
    COMMA           reduce using rule 188 (boolean_val -> TRUE .)
    BAR             reduce using rule 188 (boolean_val -> TRUE .)
    RANGE           reduce using rule 188 (boolean_val -> TRUE .)
    LT              reduce using rule 188 (boolean_val -> TRUE .)
    END             reduce using rule 188 (boolean_val -> TRUE .)
    UCASE_IDENT     reduce using rule 188 (boolean_val -> TRUE .)
    LCASE_IDENT     reduce using rule 188 (boolean_val -> TRUE .)
    PYQUOTE         reduce using rule 188 (boolean_val -> TRUE .)
    SEMICOLON       reduce using rule 188 (boolean_val -> TRUE .)
    RBRACE          reduce using rule 188 (boolean_val -> TRUE .)



state 192

    (72) signed_number -> MINUS . NUMBER

    NUMBER          shift and go to state 239



state 193

    (183) builtin_value -> special_real_val .

    RPAREN          reduce using rule 183 (builtin_value -> special_real_val .)
    COMMA           reduce using rule 183 (builtin_value -> special_real_val .)
    BAR             reduce using rule 183 (builtin_value -> special_real_val .)
    RANGE           reduce using rule 183 (builtin_value -> special_real_val .)
    LT              reduce using rule 183 (builtin_value -> special_real_val .)
    END             reduce using rule 183 (builtin_value -> special_real_val .)
    UCASE_IDENT     reduce using rule 183 (builtin_value -> special_real_val .)
    LCASE_IDENT     reduce using rule 183 (builtin_value -> special_real_val .)
    PYQUOTE         reduce using rule 183 (builtin_value -> special_real_val .)
    SEMICOLON       reduce using rule 183 (builtin_value -> special_real_val .)
    RBRACE          reduce using rule 183 (builtin_value -> special_real_val .)



state 194

    (176) value -> builtin_value .

    RPAREN          reduce using rule 176 (value -> builtin_value .)
    COMMA           reduce using rule 176 (value -> builtin_value .)
    BAR             reduce using rule 176 (value -> builtin_value .)
    RANGE           reduce using rule 176 (value -> builtin_value .)
    LT              reduce using rule 176 (value -> builtin_value .)
    END             reduce using rule 176 (value -> builtin_value .)
    UCASE_IDENT     reduce using rule 176 (value -> builtin_value .)
    LCASE_IDENT     reduce using rule 176 (value -> builtin_value .)
    PYQUOTE         reduce using rule 176 (value -> builtin_value .)
    SEMICOLON       reduce using rule 176 (value -> builtin_value .)
    RBRACE          reduce using rule 176 (value -> builtin_value .)



state 195

    (187) builtin_value -> char_string .

    RPAREN          reduce using rule 187 (builtin_value -> char_string .)
    COMMA           reduce using rule 187 (builtin_value -> char_string .)
    BAR             reduce using rule 187 (builtin_value -> char_string .)
    RANGE           reduce using rule 187 (builtin_value -> char_string .)
    LT              reduce using rule 187 (builtin_value -> char_string .)
    END             reduce using rule 187 (builtin_value -> char_string .)
    UCASE_IDENT     reduce using rule 187 (builtin_value -> char_string .)
    LCASE_IDENT     reduce using rule 187 (builtin_value -> char_string .)
    PYQUOTE         reduce using rule 187 (builtin_value -> char_string .)
    SEMICOLON       reduce using rule 187 (builtin_value -> char_string .)
    RBRACE          reduce using rule 187 (builtin_value -> char_string .)



state 196

    (184) builtin_value -> signed_number .

    RPAREN          reduce using rule 184 (builtin_value -> signed_number .)
    COMMA           reduce using rule 184 (builtin_value -> signed_number .)
    BAR             reduce using rule 184 (builtin_value -> signed_number .)
    RANGE           reduce using rule 184 (builtin_value -> signed_number .)
    LT              reduce using rule 184 (builtin_value -> signed_number .)
    END             reduce using rule 184 (builtin_value -> signed_number .)
    UCASE_IDENT     reduce using rule 184 (builtin_value -> signed_number .)
    LCASE_IDENT     reduce using rule 184 (builtin_value -> signed_number .)
    PYQUOTE         reduce using rule 184 (builtin_value -> signed_number .)
    SEMICOLON       reduce using rule 184 (builtin_value -> signed_number .)
    RBRACE          reduce using rule 184 (builtin_value -> signed_number .)



state 197

    (175) value_assign -> identifier type GETS value .

    END             reduce using rule 175 (value_assign -> identifier type GETS value .)
    UCASE_IDENT     reduce using rule 175 (value_assign -> identifier type GETS value .)
    LCASE_IDENT     reduce using rule 175 (value_assign -> identifier type GETS value .)
    PYQUOTE         reduce using rule 175 (value_assign -> identifier type GETS value .)
    SEMICOLON       reduce using rule 175 (value_assign -> identifier type GETS value .)



state 198

    (209) char_string -> QSTRING .

    RPAREN          reduce using rule 209 (char_string -> QSTRING .)
    COMMA           reduce using rule 209 (char_string -> QSTRING .)
    BAR             reduce using rule 209 (char_string -> QSTRING .)
    RANGE           reduce using rule 209 (char_string -> QSTRING .)
    LT              reduce using rule 209 (char_string -> QSTRING .)
    END             reduce using rule 209 (char_string -> QSTRING .)
    UCASE_IDENT     reduce using rule 209 (char_string -> QSTRING .)
    LCASE_IDENT     reduce using rule 209 (char_string -> QSTRING .)
    PYQUOTE         reduce using rule 209 (char_string -> QSTRING .)
    SEMICOLON       reduce using rule 209 (char_string -> QSTRING .)
    RBRACE          reduce using rule 209 (char_string -> QSTRING .)



state 199

    (182) builtin_value -> null_val .

    RPAREN          reduce using rule 182 (builtin_value -> null_val .)
    COMMA           reduce using rule 182 (builtin_value -> null_val .)
    BAR             reduce using rule 182 (builtin_value -> null_val .)
    RANGE           reduce using rule 182 (builtin_value -> null_val .)
    LT              reduce using rule 182 (builtin_value -> null_val .)
    END             reduce using rule 182 (builtin_value -> null_val .)
    UCASE_IDENT     reduce using rule 182 (builtin_value -> null_val .)
    LCASE_IDENT     reduce using rule 182 (builtin_value -> null_val .)
    PYQUOTE         reduce using rule 182 (builtin_value -> null_val .)
    SEMICOLON       reduce using rule 182 (builtin_value -> null_val .)
    RBRACE          reduce using rule 182 (builtin_value -> null_val .)



state 200

    (134) subtype_spec -> LPAREN subtype_val_set_list . RPAREN
    (135) subtype_spec -> LPAREN subtype_val_set_list . COMMA ELLIPSIS RPAREN
    (137) subtype_val_set_list -> subtype_val_set_list . BAR subtype_val_set

    RPAREN          shift and go to state 242
    COMMA           shift and go to state 240
    BAR             shift and go to state 241



state 201

    (142) subtype_val_set -> size_constraint .

    RPAREN          reduce using rule 142 (subtype_val_set -> size_constraint .)
    COMMA           reduce using rule 142 (subtype_val_set -> size_constraint .)
    BAR             reduce using rule 142 (subtype_val_set -> size_constraint .)



state 202

    (139) subtype_val_set -> contained_subtype .

    RPAREN          reduce using rule 139 (subtype_val_set -> contained_subtype .)
    COMMA           reduce using rule 139 (subtype_val_set -> contained_subtype .)
    BAR             reduce using rule 139 (subtype_val_set -> contained_subtype .)



state 203

    (146) value_range -> lower_end_point . RANGE upper_end_point

    RANGE           shift and go to state 243



state 204

    (157) inner_type_constraints -> WITH . COMPONENT single_type_constraint
    (158) inner_type_constraints -> WITH . COMPONENTS multiple_type_constraints

    COMPONENT       shift and go to state 244
    COMPONENTS      shift and go to state 245



state 205

    (138) subtype_val_set -> single_value .

    RPAREN          reduce using rule 138 (subtype_val_set -> single_value .)
    COMMA           reduce using rule 138 (subtype_val_set -> single_value .)
    BAR             reduce using rule 138 (subtype_val_set -> single_value .)



state 206

    (136) subtype_val_set_list -> subtype_val_set .

    RPAREN          reduce using rule 136 (subtype_val_set_list -> subtype_val_set .)
    COMMA           reduce using rule 136 (subtype_val_set_list -> subtype_val_set .)
    BAR             reduce using rule 136 (subtype_val_set_list -> subtype_val_set .)



state 207

    (152) lower_end_value -> MIN .

    RANGE           reduce using rule 152 (lower_end_value -> MIN .)
    LT              reduce using rule 152 (lower_end_value -> MIN .)



state 208

    (140) subtype_val_set -> value_range .

    RPAREN          reduce using rule 140 (subtype_val_set -> value_range .)
    COMMA           reduce using rule 140 (subtype_val_set -> value_range .)
    BAR             reduce using rule 140 (subtype_val_set -> value_range .)



state 209

    (145) contained_subtype -> INCLUDES . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 246
    boolean_type    shift and go to state 115

state 210

    (143) subtype_val_set -> inner_type_constraints .

    RPAREN          reduce using rule 143 (subtype_val_set -> inner_type_constraints .)
    COMMA           reduce using rule 143 (subtype_val_set -> inner_type_constraints .)
    BAR             reduce using rule 143 (subtype_val_set -> inner_type_constraints .)



state 211

    (141) subtype_val_set -> permitted_alphabet .

    RPAREN          reduce using rule 141 (subtype_val_set -> permitted_alphabet .)
    COMMA           reduce using rule 141 (subtype_val_set -> permitted_alphabet .)
    BAR             reduce using rule 141 (subtype_val_set -> permitted_alphabet .)



state 212

    (156) permitted_alphabet -> FROM . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 247

state 213

    (144) single_value -> value .
    (151) lower_end_value -> value .

    RPAREN          reduce using rule 144 (single_value -> value .)
    COMMA           reduce using rule 144 (single_value -> value .)
    BAR             reduce using rule 144 (single_value -> value .)
    RANGE           reduce using rule 151 (lower_end_value -> value .)
    LT              reduce using rule 151 (lower_end_value -> value .)



state 214

    (147) lower_end_point -> lower_end_value .
    (148) lower_end_point -> lower_end_value . LT

    RANGE           reduce using rule 147 (lower_end_point -> lower_end_value .)
    LT              shift and go to state 248



state 215

    (73) enum_type -> ENUMERATED LBRACE named_number_list . RBRACE
    (74) enum_type -> ENUMERATED LBRACE named_number_list . COMMA ELLIPSIS RBRACE
    (67) named_number_list -> named_number_list . COMMA named_number

    RBRACE          shift and go to state 250
    COMMA           shift and go to state 249

  ! COMMA           [ shift and go to state 249 ]


state 216

    (111) selection_type -> identifier LT type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 111 (selection_type -> identifier LT type .)
    UCASE_IDENT     reduce using rule 111 (selection_type -> identifier LT type .)
    LCASE_IDENT     reduce using rule 111 (selection_type -> identifier LT type .)
    PYQUOTE         reduce using rule 111 (selection_type -> identifier LT type .)
    SEMICOLON       reduce using rule 111 (selection_type -> identifier LT type .)
    RPAREN          reduce using rule 111 (selection_type -> identifier LT type .)
    COMMA           reduce using rule 111 (selection_type -> identifier LT type .)
    BAR             reduce using rule 111 (selection_type -> identifier LT type .)
    GETS            reduce using rule 111 (selection_type -> identifier LT type .)
    RBRACE          reduce using rule 111 (selection_type -> identifier LT type .)
    OPTIONAL        reduce using rule 111 (selection_type -> identifier LT type .)
    DEFAULT         reduce using rule 111 (selection_type -> identifier LT type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 111 (selection_type -> identifier LT type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 217

    (123) any_type -> ANY DEFINED BY . identifier
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 251

state 218

    (103) alternative_type_lists -> alternative_type_list COMMA . extension_and_exception extension_addition_alternatives optional_extension_marker
    (110) alternative_type_list -> alternative_type_list COMMA . named_type
    (82) extension_and_exception -> . ELLIPSIS
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    ELLIPSIS        shift and go to state 170
    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 252
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    extension_and_exception shift and go to state 253
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    useful_type     shift and go to state 82

state 219

    (101) choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .

    END             reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    UCASE_IDENT     reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    LCASE_IDENT     reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    PYQUOTE         reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    SEMICOLON       reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    LPAREN          reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    RPAREN          reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    COMMA           reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    BAR             reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    GETS            reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    RBRACE          reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    OPTIONAL        reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)
    DEFAULT         reduce using rule 101 (choice_type -> CHOICE LBRACE alternative_type_lists RBRACE .)



state 220

    (62) named_type -> identifier type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    COMMA           reduce using rule 62 (named_type -> identifier type .)
    RBRACE          reduce using rule 62 (named_type -> identifier type .)
    OPTIONAL        reduce using rule 62 (named_type -> identifier type .)
    DEFAULT         reduce using rule 62 (named_type -> identifier type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 221

    (115) tag -> LBRACK class class_number RBRACK .

    INTEGER         reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    SEQUENCE        reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    OBJECT_IDENTIFIER reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    REAL            reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    OCTET           reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    BOOLEAN         reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    BIT             reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    NULL            reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    SET             reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    CHOICE          reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    LCASE_IDENT     reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    LBRACK          reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    ANY             reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    ENUMERATED      reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    STRING_T        reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    GENERALIZEDTIME reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    UTCTIME         reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    OBJECTDESCRIPTOR reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    EXTERNAL        reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    UCASE_IDENT     reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    IMPLICIT        reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)
    EXPLICIT        reduce using rule 115 (tag -> LBRACK class class_number RBRACK .)



state 222

    (97) element_type -> named_type DEFAULT . named_value
    (193) named_value -> . value
    (194) named_value -> . identifier value
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (206) identifier -> . LCASE_IDENT
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (211) type_ref -> . UCASE_IDENT

    LCASE_IDENT     shift and go to state 17
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 180
    type_ref        shift and go to state 35
    special_real_val shift and go to state 193
    builtin_value   shift and go to state 194
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    named_value     shift and go to state 255
    ext_val_ref     shift and go to state 37
    boolean_val     shift and go to state 186
    value           shift and go to state 254
    null_val        shift and go to state 199
    identifier      shift and go to state 256

state 223

    (96) element_type -> named_type OPTIONAL .

    COMMA           reduce using rule 96 (element_type -> named_type OPTIONAL .)
    RBRACE          reduce using rule 96 (element_type -> named_type OPTIONAL .)



state 224

    (94) element_type_list -> element_type_list COMMA . element_type
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    real_type       shift and go to state 79
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    element_type    shift and go to state 257
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    choice_type     shift and go to state 107

state 225

    (99) set_type -> SET LBRACE element_type_list RBRACE .

    END             reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    UCASE_IDENT     reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    LCASE_IDENT     reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    PYQUOTE         reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    SEMICOLON       reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    LPAREN          reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    RPAREN          reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    COMMA           reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    BAR             reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    GETS            reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    RBRACE          reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    OPTIONAL        reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)
    DEFAULT         reduce using rule 99 (set_type -> SET LBRACE element_type_list RBRACE .)



state 226

    (131) sub_type -> SET size_constraint OF type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    UCASE_IDENT     reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    LCASE_IDENT     reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    PYQUOTE         reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    SEMICOLON       reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    RPAREN          reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    COMMA           reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    BAR             reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    GETS            reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    RBRACE          reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    OPTIONAL        reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    DEFAULT         reduce using rule 131 (sub_type -> SET size_constraint OF type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 131 (sub_type -> SET size_constraint OF type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 227

    (90) extension_addition_list -> COMMA . extension_addition
    (92) extension_addition -> . element_type
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    extension_addition shift and go to state 258
    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    element_type    shift and go to state 259
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    any_type        shift and go to state 116

state 228

    (87) component_type_lists -> extension_and_exception extension_additions . optional_extension_marker
    (83) optional_extension_marker -> . COMMA ELLIPSIS
    (84) optional_extension_marker -> .

    COMMA           shift and go to state 260
    RBRACE          reduce using rule 84 (optional_extension_marker -> .)


    optional_extension_marker shift and go to state 261

state 229

    (88) extension_additions -> extension_addition_list .
    (91) extension_addition_list -> extension_addition_list . COMMA extension_addition

  ! shift/reduce conflict for COMMA resolved as shift.
    RBRACE          reduce using rule 88 (extension_additions -> extension_addition_list .)
    COMMA           shift and go to state 262

  ! COMMA           [ reduce using rule 88 (extension_additions -> extension_addition_list .) ]


state 230

    (86) component_type_lists -> element_type_list COMMA . extension_and_exception extension_additions optional_extension_marker
    (94) element_type_list -> element_type_list COMMA . element_type
    (82) extension_and_exception -> . ELLIPSIS
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    ELLIPSIS        shift and go to state 170
    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    extension_and_exception shift and go to state 263
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    oid_type        shift and go to state 81
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    any_type        shift and go to state 116
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    element_type    shift and go to state 257
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    useful_type     shift and go to state 82
    choice_type     shift and go to state 107

state 231

    (80) sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .

    END             reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    UCASE_IDENT     reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    LCASE_IDENT     reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    PYQUOTE         reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    SEMICOLON       reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    LPAREN          reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    RPAREN          reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    COMMA           reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    BAR             reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    GETS            reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    RBRACE          reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    OPTIONAL        reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)
    DEFAULT         reduce using rule 80 (sequence_type -> SEQUENCE LBRACE component_type_lists RBRACE .)



state 232

    (132) sub_type -> SEQUENCE size_constraint OF type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    UCASE_IDENT     reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    LCASE_IDENT     reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    PYQUOTE         reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    SEMICOLON       reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    RPAREN          reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    COMMA           reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    BAR             reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    GETS            reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    RBRACE          reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    OPTIONAL        reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    DEFAULT         reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 132 (sub_type -> SEQUENCE size_constraint OF type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 233

    (133) sub_type -> SEQUENCE LPAREN size_constraint RPAREN . OF type

    OF              shift and go to state 264



state 234

    (69) named_number -> identifier LPAREN . signed_number RPAREN
    (70) named_number -> identifier LPAREN . defined_value RPAREN
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 265
    ext_val_ref     shift and go to state 37
    identifier      shift and go to state 38
    signed_number   shift and go to state 266
    type_ref        shift and go to state 35

state 235

    (67) named_number_list -> named_number_list COMMA . named_number
    (69) named_number -> . identifier LPAREN signed_number RPAREN
    (70) named_number -> . identifier LPAREN defined_value RPAREN
    (206) identifier -> . LCASE_IDENT

    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 177
    named_number    shift and go to state 267

state 236

    (66) integer_type -> INTEGER LBRACE named_number_list RBRACE .

    END             reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    UCASE_IDENT     reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    LCASE_IDENT     reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    PYQUOTE         reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    SEMICOLON       reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    LPAREN          reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    RPAREN          reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    COMMA           reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    BAR             reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    GETS            reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    RBRACE          reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    OPTIONAL        reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)
    DEFAULT         reduce using rule 66 (integer_type -> INTEGER LBRACE named_number_list RBRACE .)



state 237

    (77) bitstring_type -> BIT STRING LBRACE named_bit_list . RBRACE

    RBRACE          shift and go to state 268



state 238

    (78) named_bit_list -> named_number_list .
    (67) named_number_list -> named_number_list . COMMA named_number

    RBRACE          reduce using rule 78 (named_bit_list -> named_number_list .)
    COMMA           shift and go to state 235



state 239

    (72) signed_number -> MINUS NUMBER .

    RPAREN          reduce using rule 72 (signed_number -> MINUS NUMBER .)
    COMMA           reduce using rule 72 (signed_number -> MINUS NUMBER .)
    BAR             reduce using rule 72 (signed_number -> MINUS NUMBER .)
    RANGE           reduce using rule 72 (signed_number -> MINUS NUMBER .)
    LT              reduce using rule 72 (signed_number -> MINUS NUMBER .)
    END             reduce using rule 72 (signed_number -> MINUS NUMBER .)
    UCASE_IDENT     reduce using rule 72 (signed_number -> MINUS NUMBER .)
    LCASE_IDENT     reduce using rule 72 (signed_number -> MINUS NUMBER .)
    PYQUOTE         reduce using rule 72 (signed_number -> MINUS NUMBER .)
    SEMICOLON       reduce using rule 72 (signed_number -> MINUS NUMBER .)
    RBRACE          reduce using rule 72 (signed_number -> MINUS NUMBER .)



state 240

    (135) subtype_spec -> LPAREN subtype_val_set_list COMMA . ELLIPSIS RPAREN

    ELLIPSIS        shift and go to state 269



state 241

    (137) subtype_val_set_list -> subtype_val_set_list BAR . subtype_val_set
    (138) subtype_val_set -> . single_value
    (139) subtype_val_set -> . contained_subtype
    (140) subtype_val_set -> . value_range
    (141) subtype_val_set -> . permitted_alphabet
    (142) subtype_val_set -> . size_constraint
    (143) subtype_val_set -> . inner_type_constraints
    (144) single_value -> . value
    (145) contained_subtype -> . INCLUDES type
    (146) value_range -> . lower_end_point RANGE upper_end_point
    (156) permitted_alphabet -> . FROM subtype_spec
    (155) size_constraint -> . SIZE subtype_spec
    (157) inner_type_constraints -> . WITH COMPONENT single_type_constraint
    (158) inner_type_constraints -> . WITH COMPONENTS multiple_type_constraints
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (147) lower_end_point -> . lower_end_value
    (148) lower_end_point -> . lower_end_value LT
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (151) lower_end_value -> . value
    (152) lower_end_value -> . MIN
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    INCLUDES        shift and go to state 209
    FROM            shift and go to state 212
    SIZE            shift and go to state 135
    WITH            shift and go to state 204
    MIN             shift and go to state 207
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4

  ! WITH            [ shift and go to state 204 ]

    defined_value   shift and go to state 180
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    size_constraint shift and go to state 201
    type_ref        shift and go to state 35
    inner_type_constraints shift and go to state 210
    contained_subtype shift and go to state 202
    boolean_val     shift and go to state 186
    lower_end_point shift and go to state 203
    special_real_val shift and go to state 193
    single_value    shift and go to state 205
    permitted_alphabet shift and go to state 211
    ext_val_ref     shift and go to state 37
    subtype_val_set shift and go to state 270
    builtin_value   shift and go to state 194
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    value           shift and go to state 213
    value_range     shift and go to state 208
    null_val        shift and go to state 199
    lower_end_value shift and go to state 214
    identifier      shift and go to state 38

state 242

    (134) subtype_spec -> LPAREN subtype_val_set_list RPAREN .

    END             reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    UCASE_IDENT     reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    LCASE_IDENT     reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    PYQUOTE         reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    SEMICOLON       reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    OF              reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    RPAREN          reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    COMMA           reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    BAR             reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    PRESENT         reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    ABSENT          reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    OPTIONAL        reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    RBRACE          reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    LPAREN          reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    GETS            reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)
    DEFAULT         reduce using rule 134 (subtype_spec -> LPAREN subtype_val_set_list RPAREN .)



state 243

    (146) value_range -> lower_end_point RANGE . upper_end_point
    (149) upper_end_point -> . upper_end_value
    (150) upper_end_point -> . LT upper_end_value
    (153) upper_end_value -> . value
    (154) upper_end_value -> . MAX
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    LT              shift and go to state 275
    MAX             shift and go to state 273
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 180
    special_real_val shift and go to state 193
    builtin_value   shift and go to state 194
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    value           shift and go to state 274
    upper_end_value shift and go to state 272
    ext_val_ref     shift and go to state 37
    boolean_val     shift and go to state 186
    type_ref        shift and go to state 35
    upper_end_point shift and go to state 271
    null_val        shift and go to state 199
    identifier      shift and go to state 38

state 244

    (157) inner_type_constraints -> WITH COMPONENT . single_type_constraint
    (159) single_type_constraint -> . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 277
    single_type_constraint shift and go to state 276

state 245

    (158) inner_type_constraints -> WITH COMPONENTS . multiple_type_constraints
    (160) multiple_type_constraints -> . full_specification
    (161) multiple_type_constraints -> . partial_specification
    (162) full_specification -> . LBRACE type_constraints RBRACE
    (163) partial_specification -> . LBRACE ELLIPSIS COMMA type_constraints RBRACE

    LBRACE          shift and go to state 278

  ! LBRACE          [ shift and go to state 278 ]

    multiple_type_constraints shift and go to state 279
    partial_specification shift and go to state 280
    full_specification shift and go to state 281

state 246

    (145) contained_subtype -> INCLUDES type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    RPAREN          reduce using rule 145 (contained_subtype -> INCLUDES type .)
    COMMA           reduce using rule 145 (contained_subtype -> INCLUDES type .)
    BAR             reduce using rule 145 (contained_subtype -> INCLUDES type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 247

    (156) permitted_alphabet -> FROM subtype_spec .

    RPAREN          reduce using rule 156 (permitted_alphabet -> FROM subtype_spec .)
    COMMA           reduce using rule 156 (permitted_alphabet -> FROM subtype_spec .)
    BAR             reduce using rule 156 (permitted_alphabet -> FROM subtype_spec .)



state 248

    (148) lower_end_point -> lower_end_value LT .

    RANGE           reduce using rule 148 (lower_end_point -> lower_end_value LT .)



state 249

    (74) enum_type -> ENUMERATED LBRACE named_number_list COMMA . ELLIPSIS RBRACE
    (67) named_number_list -> named_number_list COMMA . named_number
    (69) named_number -> . identifier LPAREN signed_number RPAREN
    (70) named_number -> . identifier LPAREN defined_value RPAREN
    (206) identifier -> . LCASE_IDENT

    ELLIPSIS        shift and go to state 282
    LCASE_IDENT     shift and go to state 17


    identifier      shift and go to state 177
    named_number    shift and go to state 267

state 250

    (73) enum_type -> ENUMERATED LBRACE named_number_list RBRACE .

    END             reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    UCASE_IDENT     reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    LCASE_IDENT     reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    PYQUOTE         reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    SEMICOLON       reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    LPAREN          reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    RPAREN          reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    COMMA           reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    BAR             reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    GETS            reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    RBRACE          reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    OPTIONAL        reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)
    DEFAULT         reduce using rule 73 (enum_type -> ENUMERATED LBRACE named_number_list RBRACE .)



state 251

    (123) any_type -> ANY DEFINED BY identifier .

    END             reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    UCASE_IDENT     reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    LCASE_IDENT     reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    PYQUOTE         reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    SEMICOLON       reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    LPAREN          reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    RPAREN          reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    COMMA           reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    BAR             reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    GETS            reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    RBRACE          reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    OPTIONAL        reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)
    DEFAULT         reduce using rule 123 (any_type -> ANY DEFINED BY identifier .)



state 252

    (110) alternative_type_list -> alternative_type_list COMMA named_type .

    RBRACE          reduce using rule 110 (alternative_type_list -> alternative_type_list COMMA named_type .)
    COMMA           reduce using rule 110 (alternative_type_list -> alternative_type_list COMMA named_type .)



state 253

    (103) alternative_type_lists -> alternative_type_list COMMA extension_and_exception . extension_addition_alternatives optional_extension_marker
    (104) extension_addition_alternatives -> . extension_addition_alternatives_list
    (105) extension_addition_alternatives -> .
    (106) extension_addition_alternatives_list -> . COMMA extension_addition_alternative
    (107) extension_addition_alternatives_list -> . extension_addition_alternatives_list COMMA extension_addition_alternative

  ! shift/reduce conflict for COMMA resolved as shift.
    RBRACE          reduce using rule 105 (extension_addition_alternatives -> .)
    COMMA           shift and go to state 283

  ! COMMA           [ reduce using rule 105 (extension_addition_alternatives -> .) ]

    extension_addition_alternatives shift and go to state 284
    extension_addition_alternatives_list shift and go to state 285

state 254

    (193) named_value -> value .

    COMMA           reduce using rule 193 (named_value -> value .)
    RBRACE          reduce using rule 193 (named_value -> value .)



state 255

    (97) element_type -> named_type DEFAULT named_value .

    COMMA           reduce using rule 97 (element_type -> named_type DEFAULT named_value .)
    RBRACE          reduce using rule 97 (element_type -> named_type DEFAULT named_value .)



state 256

    (194) named_value -> identifier . value
    (179) defined_value -> identifier .
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

  ! shift/reduce conflict for LCASE_IDENT resolved as shift.
  ! shift/reduce conflict for UCASE_IDENT resolved as shift.
    RPAREN          reduce using rule 179 (defined_value -> identifier .)
    RBRACK          reduce using rule 179 (defined_value -> identifier .)
    COMMA           reduce using rule 179 (defined_value -> identifier .)
    BAR             reduce using rule 179 (defined_value -> identifier .)
    RANGE           reduce using rule 179 (defined_value -> identifier .)
    LT              reduce using rule 179 (defined_value -> identifier .)
    END             reduce using rule 179 (defined_value -> identifier .)
    PYQUOTE         reduce using rule 179 (defined_value -> identifier .)
    SEMICOLON       reduce using rule 179 (defined_value -> identifier .)
    RBRACE          reduce using rule 179 (defined_value -> identifier .)
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4

  ! UCASE_IDENT     [ reduce using rule 179 (defined_value -> identifier .) ]
  ! LCASE_IDENT     [ reduce using rule 179 (defined_value -> identifier .) ]

    defined_value   shift and go to state 180
    special_real_val shift and go to state 193
    builtin_value   shift and go to state 194
    hex_string      shift and go to state 181
    binary_string   shift and go to state 182
    char_string     shift and go to state 195
    signed_number   shift and go to state 196
    value           shift and go to state 286
    ext_val_ref     shift and go to state 37
    boolean_val     shift and go to state 186
    type_ref        shift and go to state 35
    null_val        shift and go to state 199
    identifier      shift and go to state 38

state 257

    (94) element_type_list -> element_type_list COMMA element_type .

    RBRACE          reduce using rule 94 (element_type_list -> element_type_list COMMA element_type .)
    COMMA           reduce using rule 94 (element_type_list -> element_type_list COMMA element_type .)



state 258

    (90) extension_addition_list -> COMMA extension_addition .

    COMMA           reduce using rule 90 (extension_addition_list -> COMMA extension_addition .)
    RBRACE          reduce using rule 90 (extension_addition_list -> COMMA extension_addition .)



state 259

    (92) extension_addition -> element_type .

    COMMA           reduce using rule 92 (extension_addition -> element_type .)
    RBRACE          reduce using rule 92 (extension_addition -> element_type .)



state 260

    (83) optional_extension_marker -> COMMA . ELLIPSIS

    ELLIPSIS        shift and go to state 287



state 261

    (87) component_type_lists -> extension_and_exception extension_additions optional_extension_marker .

    RBRACE          reduce using rule 87 (component_type_lists -> extension_and_exception extension_additions optional_extension_marker .)



state 262

    (91) extension_addition_list -> extension_addition_list COMMA . extension_addition
    (92) extension_addition -> . element_type
    (95) element_type -> . named_type
    (96) element_type -> . named_type OPTIONAL
    (97) element_type -> . named_type DEFAULT named_value
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    extension_addition shift and go to state 288
    named_type      shift and go to state 162
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    ext_type_ref    shift and go to state 96
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    element_type    shift and go to state 259
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152
    any_type        shift and go to state 116

state 263

    (86) component_type_lists -> element_type_list COMMA extension_and_exception . extension_additions optional_extension_marker
    (88) extension_additions -> . extension_addition_list
    (89) extension_additions -> .
    (90) extension_addition_list -> . COMMA extension_addition
    (91) extension_addition_list -> . extension_addition_list COMMA extension_addition

  ! shift/reduce conflict for COMMA resolved as shift.
    RBRACE          reduce using rule 89 (extension_additions -> .)
    COMMA           shift and go to state 227

  ! COMMA           [ reduce using rule 89 (extension_additions -> .) ]

    extension_additions shift and go to state 289
    extension_addition_list shift and go to state 229

state 264

    (133) sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF . type
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (206) identifier -> . LCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LCASE_IDENT     shift and go to state 17
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    type_ref        shift and go to state 76
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    enum_type       shift and go to state 109
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 113
    type            shift and go to state 290
    boolean_type    shift and go to state 115

state 265

    (70) named_number -> identifier LPAREN defined_value . RPAREN

    RPAREN          shift and go to state 291



state 266

    (69) named_number -> identifier LPAREN signed_number . RPAREN

    RPAREN          shift and go to state 292



state 267

    (67) named_number_list -> named_number_list COMMA named_number .

    RBRACE          reduce using rule 67 (named_number_list -> named_number_list COMMA named_number .)
    COMMA           reduce using rule 67 (named_number_list -> named_number_list COMMA named_number .)



state 268

    (77) bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .

    END             reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    UCASE_IDENT     reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    LCASE_IDENT     reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    PYQUOTE         reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    SEMICOLON       reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    LPAREN          reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    RPAREN          reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    COMMA           reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    BAR             reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    GETS            reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    RBRACE          reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    OPTIONAL        reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)
    DEFAULT         reduce using rule 77 (bitstring_type -> BIT STRING LBRACE named_bit_list RBRACE .)



state 269

    (135) subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS . RPAREN

    RPAREN          shift and go to state 293



state 270

    (137) subtype_val_set_list -> subtype_val_set_list BAR subtype_val_set .

    RPAREN          reduce using rule 137 (subtype_val_set_list -> subtype_val_set_list BAR subtype_val_set .)
    COMMA           reduce using rule 137 (subtype_val_set_list -> subtype_val_set_list BAR subtype_val_set .)
    BAR             reduce using rule 137 (subtype_val_set_list -> subtype_val_set_list BAR subtype_val_set .)



state 271

    (146) value_range -> lower_end_point RANGE upper_end_point .

    RPAREN          reduce using rule 146 (value_range -> lower_end_point RANGE upper_end_point .)
    COMMA           reduce using rule 146 (value_range -> lower_end_point RANGE upper_end_point .)
    BAR             reduce using rule 146 (value_range -> lower_end_point RANGE upper_end_point .)



state 272

    (149) upper_end_point -> upper_end_value .

    RPAREN          reduce using rule 149 (upper_end_point -> upper_end_value .)
    COMMA           reduce using rule 149 (upper_end_point -> upper_end_value .)
    BAR             reduce using rule 149 (upper_end_point -> upper_end_value .)



state 273

    (154) upper_end_value -> MAX .

    RPAREN          reduce using rule 154 (upper_end_value -> MAX .)
    COMMA           reduce using rule 154 (upper_end_value -> MAX .)
    BAR             reduce using rule 154 (upper_end_value -> MAX .)



state 274

    (153) upper_end_value -> value .

    RPAREN          reduce using rule 153 (upper_end_value -> value .)
    COMMA           reduce using rule 153 (upper_end_value -> value .)
    BAR             reduce using rule 153 (upper_end_value -> value .)



state 275

    (150) upper_end_point -> LT . upper_end_value
    (153) upper_end_value -> . value
    (154) upper_end_value -> . MAX
    (176) value -> . builtin_value
    (177) value -> . defined_value
    (181) builtin_value -> . boolean_val
    (182) builtin_value -> . null_val
    (183) builtin_value -> . special_real_val
    (184) builtin_value -> . signed_number
    (185) builtin_value -> . hex_string
    (186) builtin_value -> . binary_string
    (187) builtin_value -> . char_string
    (178) defined_value -> . ext_val_ref
    (179) defined_value -> . identifier
    (188) boolean_val -> . TRUE
    (189) boolean_val -> . FALSE
    (192) null_val -> . NULL
    (190) special_real_val -> . PLUS_INFINITY
    (191) special_real_val -> . MINUS_INFINITY
    (71) signed_number -> . NUMBER
    (72) signed_number -> . MINUS NUMBER
    (208) hex_string -> . HSTRING
    (207) binary_string -> . BSTRING
    (209) char_string -> . QSTRING
    (180) ext_val_ref -> . type_ref DOT identifier
    (206) identifier -> . LCASE_IDENT
    (211) type_ref -> . UCASE_IDENT

    MAX             shift and go to state 273
    TRUE            shift and go to state 191
    FALSE           shift and go to state 188
    NULL            shift and go to state 190
    PLUS_INFINITY   shift and go to state 187
    MINUS_INFINITY  shift and go to state 185
    NUMBER          shift and go to state 184
    MINUS           shift and go to state 192
    HSTRING         shift and go to state 183
    BSTRING         shift and go to state 189
    QSTRING         shift and go to state 198
    LCASE_IDENT     shift and go to state 17
    UCASE_IDENT     shift and go to state 4


    defined_value   shift and go to state 180
    special_real_val shift and go to state 193
    builtin_value   shift and go to state 194
    char_string     shift and go to state 195
    binary_string   shift and go to state 182
    hex_string      shift and go to state 181
    signed_number   shift and go to state 196
    value           shift and go to state 274
    upper_end_value shift and go to state 294
    ext_val_ref     shift and go to state 37
    boolean_val     shift and go to state 186
    type_ref        shift and go to state 35
    null_val        shift and go to state 199
    identifier      shift and go to state 38

state 276

    (157) inner_type_constraints -> WITH COMPONENT single_type_constraint .

    RPAREN          reduce using rule 157 (inner_type_constraints -> WITH COMPONENT single_type_constraint .)
    COMMA           reduce using rule 157 (inner_type_constraints -> WITH COMPONENT single_type_constraint .)
    BAR             reduce using rule 157 (inner_type_constraints -> WITH COMPONENT single_type_constraint .)



state 277

    (159) single_type_constraint -> subtype_spec .

    RPAREN          reduce using rule 159 (single_type_constraint -> subtype_spec .)
    COMMA           reduce using rule 159 (single_type_constraint -> subtype_spec .)
    BAR             reduce using rule 159 (single_type_constraint -> subtype_spec .)



state 278

    (162) full_specification -> LBRACE . type_constraints RBRACE
    (163) partial_specification -> LBRACE . ELLIPSIS COMMA type_constraints RBRACE
    (164) type_constraints -> . named_constraint
    (165) type_constraints -> . type_constraints COMMA named_constraint
    (166) named_constraint -> . identifier constraint
    (167) named_constraint -> . constraint
    (206) identifier -> . LCASE_IDENT
    (168) constraint -> . value_constraint presence_constraint
    (169) value_constraint -> . subtype_spec
    (170) value_constraint -> .
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    ELLIPSIS        shift and go to state 299
    LCASE_IDENT     shift and go to state 17
    PRESENT         reduce using rule 170 (value_constraint -> .)
    ABSENT          reduce using rule 170 (value_constraint -> .)
    OPTIONAL        reduce using rule 170 (value_constraint -> .)
    RBRACE          reduce using rule 170 (value_constraint -> .)
    COMMA           reduce using rule 170 (value_constraint -> .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    value_constraint shift and go to state 298
    constraint      shift and go to state 295
    type_constraints shift and go to state 296
    named_constraint shift and go to state 297
    identifier      shift and go to state 300
    subtype_spec    shift and go to state 301

state 279

    (158) inner_type_constraints -> WITH COMPONENTS multiple_type_constraints .

    RPAREN          reduce using rule 158 (inner_type_constraints -> WITH COMPONENTS multiple_type_constraints .)
    COMMA           reduce using rule 158 (inner_type_constraints -> WITH COMPONENTS multiple_type_constraints .)
    BAR             reduce using rule 158 (inner_type_constraints -> WITH COMPONENTS multiple_type_constraints .)



state 280

    (161) multiple_type_constraints -> partial_specification .

    RPAREN          reduce using rule 161 (multiple_type_constraints -> partial_specification .)
    COMMA           reduce using rule 161 (multiple_type_constraints -> partial_specification .)
    BAR             reduce using rule 161 (multiple_type_constraints -> partial_specification .)



state 281

    (160) multiple_type_constraints -> full_specification .

    RPAREN          reduce using rule 160 (multiple_type_constraints -> full_specification .)
    COMMA           reduce using rule 160 (multiple_type_constraints -> full_specification .)
    BAR             reduce using rule 160 (multiple_type_constraints -> full_specification .)



state 282

    (74) enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS . RBRACE

    RBRACE          shift and go to state 302



state 283

    (106) extension_addition_alternatives_list -> COMMA . extension_addition_alternative
    (108) extension_addition_alternative -> . named_type
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 303
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    extension_addition_alternative shift and go to state 304
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152

state 284

    (103) alternative_type_lists -> alternative_type_list COMMA extension_and_exception extension_addition_alternatives . optional_extension_marker
    (83) optional_extension_marker -> . COMMA ELLIPSIS
    (84) optional_extension_marker -> .

    COMMA           shift and go to state 260
    RBRACE          reduce using rule 84 (optional_extension_marker -> .)


    optional_extension_marker shift and go to state 305

state 285

    (104) extension_addition_alternatives -> extension_addition_alternatives_list .
    (107) extension_addition_alternatives_list -> extension_addition_alternatives_list . COMMA extension_addition_alternative

  ! shift/reduce conflict for COMMA resolved as shift.
    RBRACE          reduce using rule 104 (extension_addition_alternatives -> extension_addition_alternatives_list .)
    COMMA           shift and go to state 306

  ! COMMA           [ reduce using rule 104 (extension_addition_alternatives -> extension_addition_alternatives_list .) ]


state 286

    (194) named_value -> identifier value .

    COMMA           reduce using rule 194 (named_value -> identifier value .)
    RBRACE          reduce using rule 194 (named_value -> identifier value .)



state 287

    (83) optional_extension_marker -> COMMA ELLIPSIS .

    RBRACE          reduce using rule 83 (optional_extension_marker -> COMMA ELLIPSIS .)



state 288

    (91) extension_addition_list -> extension_addition_list COMMA extension_addition .

    COMMA           reduce using rule 91 (extension_addition_list -> extension_addition_list COMMA extension_addition .)
    RBRACE          reduce using rule 91 (extension_addition_list -> extension_addition_list COMMA extension_addition .)



state 289

    (86) component_type_lists -> element_type_list COMMA extension_and_exception extension_additions . optional_extension_marker
    (83) optional_extension_marker -> . COMMA ELLIPSIS
    (84) optional_extension_marker -> .

    COMMA           shift and go to state 260
    RBRACE          reduce using rule 84 (optional_extension_marker -> .)


    optional_extension_marker shift and go to state 307

state 290

    (133) sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .
    (130) sub_type -> type . subtype_spec
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift.
    END             reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    UCASE_IDENT     reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    LCASE_IDENT     reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    PYQUOTE         reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    SEMICOLON       reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    RPAREN          reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    COMMA           reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    BAR             reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    GETS            reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    RBRACE          reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    OPTIONAL        reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    DEFAULT         reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ reduce using rule 133 (sub_type -> SEQUENCE LPAREN size_constraint RPAREN OF type .) ]
  ! LPAREN          [ shift and go to state 143 ]

    subtype_spec    shift and go to state 144

state 291

    (70) named_number -> identifier LPAREN defined_value RPAREN .

    RBRACE          reduce using rule 70 (named_number -> identifier LPAREN defined_value RPAREN .)
    COMMA           reduce using rule 70 (named_number -> identifier LPAREN defined_value RPAREN .)



state 292

    (69) named_number -> identifier LPAREN signed_number RPAREN .

    RBRACE          reduce using rule 69 (named_number -> identifier LPAREN signed_number RPAREN .)
    COMMA           reduce using rule 69 (named_number -> identifier LPAREN signed_number RPAREN .)



state 293

    (135) subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .

    END             reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    UCASE_IDENT     reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    LCASE_IDENT     reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    PYQUOTE         reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    SEMICOLON       reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    OF              reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    RPAREN          reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    COMMA           reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    BAR             reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    PRESENT         reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    ABSENT          reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    OPTIONAL        reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    RBRACE          reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    LPAREN          reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    GETS            reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)
    DEFAULT         reduce using rule 135 (subtype_spec -> LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN .)



state 294

    (150) upper_end_point -> LT upper_end_value .

    RPAREN          reduce using rule 150 (upper_end_point -> LT upper_end_value .)
    COMMA           reduce using rule 150 (upper_end_point -> LT upper_end_value .)
    BAR             reduce using rule 150 (upper_end_point -> LT upper_end_value .)



state 295

    (167) named_constraint -> constraint .

    RBRACE          reduce using rule 167 (named_constraint -> constraint .)
    COMMA           reduce using rule 167 (named_constraint -> constraint .)



state 296

    (162) full_specification -> LBRACE type_constraints . RBRACE
    (165) type_constraints -> type_constraints . COMMA named_constraint

    RBRACE          shift and go to state 309
    COMMA           shift and go to state 308



state 297

    (164) type_constraints -> named_constraint .

    RBRACE          reduce using rule 164 (type_constraints -> named_constraint .)
    COMMA           reduce using rule 164 (type_constraints -> named_constraint .)



state 298

    (168) constraint -> value_constraint . presence_constraint
    (171) presence_constraint -> . PRESENT
    (172) presence_constraint -> . ABSENT
    (173) presence_constraint -> . OPTIONAL
    (174) presence_constraint -> .

    PRESENT         shift and go to state 312
    ABSENT          shift and go to state 310
    OPTIONAL        shift and go to state 313
    RBRACE          reduce using rule 174 (presence_constraint -> .)
    COMMA           reduce using rule 174 (presence_constraint -> .)


    presence_constraint shift and go to state 311

state 299

    (163) partial_specification -> LBRACE ELLIPSIS . COMMA type_constraints RBRACE

    COMMA           shift and go to state 314



state 300

    (166) named_constraint -> identifier . constraint
    (168) constraint -> . value_constraint presence_constraint
    (169) value_constraint -> . subtype_spec
    (170) value_constraint -> .
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    PRESENT         reduce using rule 170 (value_constraint -> .)
    ABSENT          reduce using rule 170 (value_constraint -> .)
    OPTIONAL        reduce using rule 170 (value_constraint -> .)
    RBRACE          reduce using rule 170 (value_constraint -> .)
    COMMA           reduce using rule 170 (value_constraint -> .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    value_constraint shift and go to state 298
    constraint      shift and go to state 315
    subtype_spec    shift and go to state 301

state 301

    (169) value_constraint -> subtype_spec .

    PRESENT         reduce using rule 169 (value_constraint -> subtype_spec .)
    ABSENT          reduce using rule 169 (value_constraint -> subtype_spec .)
    OPTIONAL        reduce using rule 169 (value_constraint -> subtype_spec .)
    RBRACE          reduce using rule 169 (value_constraint -> subtype_spec .)
    COMMA           reduce using rule 169 (value_constraint -> subtype_spec .)



state 302

    (74) enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .

    END             reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    UCASE_IDENT     reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    LCASE_IDENT     reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    PYQUOTE         reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    SEMICOLON       reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    LPAREN          reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    RPAREN          reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    COMMA           reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    BAR             reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    GETS            reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    RBRACE          reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    OPTIONAL        reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)
    DEFAULT         reduce using rule 74 (enum_type -> ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE .)



state 303

    (108) extension_addition_alternative -> named_type .

    COMMA           reduce using rule 108 (extension_addition_alternative -> named_type .)
    RBRACE          reduce using rule 108 (extension_addition_alternative -> named_type .)



state 304

    (106) extension_addition_alternatives_list -> COMMA extension_addition_alternative .

    COMMA           reduce using rule 106 (extension_addition_alternatives_list -> COMMA extension_addition_alternative .)
    RBRACE          reduce using rule 106 (extension_addition_alternatives_list -> COMMA extension_addition_alternative .)



state 305

    (103) alternative_type_lists -> alternative_type_list COMMA extension_and_exception extension_addition_alternatives optional_extension_marker .

    RBRACE          reduce using rule 103 (alternative_type_lists -> alternative_type_list COMMA extension_and_exception extension_addition_alternatives optional_extension_marker .)



state 306

    (107) extension_addition_alternatives_list -> extension_addition_alternatives_list COMMA . extension_addition_alternative
    (108) extension_addition_alternative -> . named_type
    (62) named_type -> . identifier type
    (63) named_type -> . type
    (206) identifier -> . LCASE_IDENT
    (38) type -> . builtin_type
    (39) type -> . defined_type
    (40) type -> . sub_type
    (44) builtin_type -> . boolean_type
    (45) builtin_type -> . integer_type
    (46) builtin_type -> . bitstring_type
    (47) builtin_type -> . null_type
    (48) builtin_type -> . sequence_type
    (49) builtin_type -> . sequenceof_type
    (50) builtin_type -> . set_type
    (51) builtin_type -> . setof_type
    (52) builtin_type -> . choice_type
    (53) builtin_type -> . selection_type
    (54) builtin_type -> . tagged_type
    (55) builtin_type -> . any_type
    (56) builtin_type -> . oid_type
    (57) builtin_type -> . enum_type
    (58) builtin_type -> . real_type
    (59) builtin_type -> . char_str_type
    (60) builtin_type -> . useful_type
    (61) builtin_type -> . OCTET STRING
    (42) defined_type -> . ext_type_ref
    (43) defined_type -> . type_ref
    (130) sub_type -> . type subtype_spec
    (131) sub_type -> . SET size_constraint OF type
    (132) sub_type -> . SEQUENCE size_constraint OF type
    (133) sub_type -> . SEQUENCE LPAREN size_constraint RPAREN OF type
    (64) boolean_type -> . BOOLEAN
    (65) integer_type -> . INTEGER
    (66) integer_type -> . INTEGER LBRACE named_number_list RBRACE
    (76) bitstring_type -> . BIT STRING
    (77) bitstring_type -> . BIT STRING LBRACE named_bit_list RBRACE
    (79) null_type -> . NULL
    (80) sequence_type -> . SEQUENCE LBRACE component_type_lists RBRACE
    (81) sequence_type -> . SEQUENCE LBRACE RBRACE
    (98) sequenceof_type -> . SEQUENCE OF type
    (99) set_type -> . SET LBRACE element_type_list RBRACE
    (100) setof_type -> . SET OF type
    (101) choice_type -> . CHOICE LBRACE alternative_type_lists RBRACE
    (111) selection_type -> . identifier LT type
    (112) tagged_type -> . tag type
    (113) tagged_type -> . tag IMPLICIT type
    (114) tagged_type -> . tag EXPLICIT type
    (122) any_type -> . ANY
    (123) any_type -> . ANY DEFINED BY identifier
    (124) oid_type -> . OBJECT_IDENTIFIER
    (73) enum_type -> . ENUMERATED LBRACE named_number_list RBRACE
    (74) enum_type -> . ENUMERATED LBRACE named_number_list COMMA ELLIPSIS RBRACE
    (75) real_type -> . REAL
    (129) char_str_type -> . STRING_T
    (125) useful_type -> . GENERALIZEDTIME
    (126) useful_type -> . UTCTIME
    (127) useful_type -> . OBJECTDESCRIPTOR
    (128) useful_type -> . EXTERNAL
    (41) ext_type_ref -> . type_ref DOT type_ref
    (211) type_ref -> . UCASE_IDENT
    (115) tag -> . LBRACK class class_number RBRACK

    LCASE_IDENT     shift and go to state 17
    OCTET           shift and go to state 98
    SET             shift and go to state 85
    SEQUENCE        shift and go to state 87
    BOOLEAN         shift and go to state 111
    INTEGER         shift and go to state 93
    BIT             shift and go to state 94
    NULL            shift and go to state 83
    CHOICE          shift and go to state 75
    ANY             shift and go to state 114
    OBJECT_IDENTIFIER shift and go to state 103
    ENUMERATED      shift and go to state 112
    REAL            shift and go to state 74
    STRING_T        shift and go to state 106
    GENERALIZEDTIME shift and go to state 86
    UTCTIME         shift and go to state 110
    OBJECTDESCRIPTOR shift and go to state 88
    EXTERNAL        shift and go to state 84
    UCASE_IDENT     shift and go to state 4
    LBRACK          shift and go to state 77

  ! SEQUENCE        [ shift and go to state 87 ]
  ! INTEGER         [ shift and go to state 93 ]
  ! BIT             [ shift and go to state 94 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SEQUENCE        [ shift and go to state 87 ]
  ! SET             [ shift and go to state 85 ]
  ! SET             [ shift and go to state 85 ]
  ! ANY             [ shift and go to state 114 ]
  ! ENUMERATED      [ shift and go to state 112 ]

    named_type      shift and go to state 303
    type_ref        shift and go to state 76
    enum_type       shift and go to state 109
    ext_type_ref    shift and go to state 96
    selection_type  shift and go to state 97
    extension_addition_alternative shift and go to state 316
    char_str_type   shift and go to state 102
    set_type        shift and go to state 99
    tagged_type     shift and go to state 100
    integer_type    shift and go to state 78
    real_type       shift and go to state 79
    tag             shift and go to state 80
    setof_type      shift and go to state 101
    any_type        shift and go to state 116
    oid_type        shift and go to state 81
    useful_type     shift and go to state 82
    null_type       shift and go to state 104
    sub_type        shift and go to state 105
    choice_type     shift and go to state 107
    sequenceof_type shift and go to state 108
    boolean_type    shift and go to state 115
    defined_type    shift and go to state 89
    sequence_type   shift and go to state 90
    builtin_type    shift and go to state 91
    bitstring_type  shift and go to state 92
    identifier      shift and go to state 154
    type            shift and go to state 152

state 307

    (86) component_type_lists -> element_type_list COMMA extension_and_exception extension_additions optional_extension_marker .

    RBRACE          reduce using rule 86 (component_type_lists -> element_type_list COMMA extension_and_exception extension_additions optional_extension_marker .)



state 308

    (165) type_constraints -> type_constraints COMMA . named_constraint
    (166) named_constraint -> . identifier constraint
    (167) named_constraint -> . constraint
    (206) identifier -> . LCASE_IDENT
    (168) constraint -> . value_constraint presence_constraint
    (169) value_constraint -> . subtype_spec
    (170) value_constraint -> .
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    LCASE_IDENT     shift and go to state 17
    PRESENT         reduce using rule 170 (value_constraint -> .)
    ABSENT          reduce using rule 170 (value_constraint -> .)
    OPTIONAL        reduce using rule 170 (value_constraint -> .)
    RBRACE          reduce using rule 170 (value_constraint -> .)
    COMMA           reduce using rule 170 (value_constraint -> .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    value_constraint shift and go to state 298
    constraint      shift and go to state 295
    named_constraint shift and go to state 317
    identifier      shift and go to state 300
    subtype_spec    shift and go to state 301

state 309

    (162) full_specification -> LBRACE type_constraints RBRACE .

    RPAREN          reduce using rule 162 (full_specification -> LBRACE type_constraints RBRACE .)
    COMMA           reduce using rule 162 (full_specification -> LBRACE type_constraints RBRACE .)
    BAR             reduce using rule 162 (full_specification -> LBRACE type_constraints RBRACE .)



state 310

    (172) presence_constraint -> ABSENT .

    RBRACE          reduce using rule 172 (presence_constraint -> ABSENT .)
    COMMA           reduce using rule 172 (presence_constraint -> ABSENT .)



state 311

    (168) constraint -> value_constraint presence_constraint .

    RBRACE          reduce using rule 168 (constraint -> value_constraint presence_constraint .)
    COMMA           reduce using rule 168 (constraint -> value_constraint presence_constraint .)



state 312

    (171) presence_constraint -> PRESENT .

    RBRACE          reduce using rule 171 (presence_constraint -> PRESENT .)
    COMMA           reduce using rule 171 (presence_constraint -> PRESENT .)



state 313

    (173) presence_constraint -> OPTIONAL .

    RBRACE          reduce using rule 173 (presence_constraint -> OPTIONAL .)
    COMMA           reduce using rule 173 (presence_constraint -> OPTIONAL .)



state 314

    (163) partial_specification -> LBRACE ELLIPSIS COMMA . type_constraints RBRACE
    (164) type_constraints -> . named_constraint
    (165) type_constraints -> . type_constraints COMMA named_constraint
    (166) named_constraint -> . identifier constraint
    (167) named_constraint -> . constraint
    (206) identifier -> . LCASE_IDENT
    (168) constraint -> . value_constraint presence_constraint
    (169) value_constraint -> . subtype_spec
    (170) value_constraint -> .
    (134) subtype_spec -> . LPAREN subtype_val_set_list RPAREN
    (135) subtype_spec -> . LPAREN subtype_val_set_list COMMA ELLIPSIS RPAREN

    LCASE_IDENT     shift and go to state 17
    PRESENT         reduce using rule 170 (value_constraint -> .)
    ABSENT          reduce using rule 170 (value_constraint -> .)
    OPTIONAL        reduce using rule 170 (value_constraint -> .)
    RBRACE          reduce using rule 170 (value_constraint -> .)
    COMMA           reduce using rule 170 (value_constraint -> .)
    LPAREN          shift and go to state 143

  ! LPAREN          [ shift and go to state 143 ]

    value_constraint shift and go to state 298
    constraint      shift and go to state 295
    type_constraints shift and go to state 318
    named_constraint shift and go to state 297
    identifier      shift and go to state 300
    subtype_spec    shift and go to state 301

state 315

    (166) named_constraint -> identifier constraint .

    RBRACE          reduce using rule 166 (named_constraint -> identifier constraint .)
    COMMA           reduce using rule 166 (named_constraint -> identifier constraint .)



state 316

    (107) extension_addition_alternatives_list -> extension_addition_alternatives_list COMMA extension_addition_alternative .

    COMMA           reduce using rule 107 (extension_addition_alternatives_list -> extension_addition_alternatives_list COMMA extension_addition_alternative .)
    RBRACE          reduce using rule 107 (extension_addition_alternatives_list -> extension_addition_alternatives_list COMMA extension_addition_alternative .)



state 317

    (165) type_constraints -> type_constraints COMMA named_constraint .

    RBRACE          reduce using rule 165 (type_constraints -> type_constraints COMMA named_constraint .)
    COMMA           reduce using rule 165 (type_constraints -> type_constraints COMMA named_constraint .)



state 318

    (163) partial_specification -> LBRACE ELLIPSIS COMMA type_constraints . RBRACE
    (165) type_constraints -> type_constraints . COMMA named_constraint

    RBRACE          shift and go to state 319
    COMMA           shift and go to state 308



state 319

    (163) partial_specification -> LBRACE ELLIPSIS COMMA type_constraints RBRACE .

    RPAREN          reduce using rule 163 (partial_specification -> LBRACE ELLIPSIS COMMA type_constraints RBRACE .)
    COMMA           reduce using rule 163 (partial_specification -> LBRACE ELLIPSIS COMMA type_constraints RBRACE .)
    BAR             reduce using rule 163 (partial_specification -> LBRACE ELLIPSIS COMMA type_constraints RBRACE .)


