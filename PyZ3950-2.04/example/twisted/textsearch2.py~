#!/usr/bin/env python

"""Like textsearch.py, but uses string.find, not regexps."""

import textsearch

class RegExpAttribXlate (ztwist.AttribXlate):
    """Converts a Z39.50 query to a Python regexp."""
    oid = oids.Z3950_ATTRS_BIB1_ov

    def translate (self, query):
        lam = ztwist.AttribXlate.translate (query)
        return lam
    def term_xlate (self, aval, term):
        if aval <> 1016: # USE attribute 'generic'
            self.raise_err (114, str (aval), self.eb)
        return lambda s: -1 <> s.find (term)
    def combiner (self, operator, r1, r2):
        if operator == 'and':
            return lambda s: (r1 (s) and r2 (s))
        elif operator == 'or':
            return lambda s: (r1 (s) or r2 (s))
        else: # and-not, prox
            self.raise_err (110, operator)

class TextSearcher2(textsearch.TextSearcher)
